{"ast":null,"code":"var _jsxFileName = \"/home/wws/pro-organiser-application/src/pages/AllBoards/AllBoards.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport style from './AllBoards.module.css';\nimport Axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../common/loader/Loader\";\nimport { AuthContext } from '../../context/Auth';\nexport const AllBoards = () => {\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [boardContents, setBoardContents] = useState({});\n  const [showBoard, setShowBoard] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const userId = currentUser.uid;\n  document.title = \"Pro Organizer\";\n  useEffect(() => {\n    getBoardContents();\n  }, [showBoard]);\n\n  const getBoardContents = () => {\n    Axios.get(`https://pro-organiser-app.firebaseio.com/boardContents/${userId}.json`).then(response => {\n      setTimeout(setBoardContents(response.data), 50000);\n      setLoading(false);\n\n      if (boardContents !== null) {\n        setShowBoard(true);\n      } else setShowBoard(false);\n    }).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.BoardContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.BoardsTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Boards\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), showBoard ? /*#__PURE__*/React.createElement(\"div\", {\n    className: style.BoardsData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, boardContents && Object.entries(boardContents).map(item => /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: \"/board/\" + item[1].boardName,\n      state: {\n        type: item[1].boardType,\n        members: item[1].members,\n        boardId: item[0]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.BoardItem,\n    key: item[1].boardName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: style.BoardName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, item[1].boardName))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, \"You haven't created any boards. Kindly click on the 'Create Board' button in the navigation bar to create a board.\"))));\n};\nexport default AllBoards;","map":{"version":3,"sources":["/home/wws/pro-organiser-application/src/pages/AllBoards/AllBoards.js"],"names":["React","useState","useEffect","useContext","style","Axios","Link","Loader","AuthContext","AllBoards","currentUser","boardContents","setBoardContents","showBoard","setShowBoard","loading","setLoading","userId","uid","document","title","getBoardContents","get","then","response","setTimeout","data","catch","error","console","log","BoardContainer","BoardsTitle","BoardsData","Object","entries","map","item","pathname","boardName","state","type","boardType","members","boardId","BoardItem","BoardName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport style from  './AllBoards.module.css';\nimport Axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../common/loader/Loader\";\nimport { AuthContext } from '../../context/Auth';\n\nexport const AllBoards = () => {\n\n    const { currentUser } = useContext(AuthContext);\n\n    const [boardContents, setBoardContents] = useState({});\n    const [showBoard, setShowBoard] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    const userId = currentUser.uid;\n\n    document.title = \"Pro Organizer\";\n\n    useEffect(() => {\n        getBoardContents();\n    }, [showBoard]);\n  \n    const getBoardContents = () => {\n        Axios\n        .get(`https://pro-organiser-app.firebaseio.com/boardContents/${userId}.json`)\n        .then((response) => {\n          setTimeout(setBoardContents(response.data), 50000);\n          setLoading(false);\n          if (boardContents !== null) {\n            setShowBoard(true);\n          } else setShowBoard(false);\n        })\n        .catch((error) => console.log(error));\n    };\n\n    return (\n        <div>\n          <br />\n          {loading ? (\n            <Loader></Loader>\n          ) : (\n            <>\n              <div className={style.BoardContainer}>\n                <div className={style.BoardsTitle}>\n                    <span>Boards</span>\n                </div>\n                <br />\n                {showBoard ? (\n                  <div className={style.BoardsData}>\n                    {boardContents &&\n                      Object.entries(boardContents).map((item) => (\n                        <Link\n                          to={{\n                            pathname: \"/board/\" + item[1].boardName,\n                            state: {\n                              type: item[1].boardType,\n                              members: item[1].members,\n                              boardId: item[0],\n                            },\n                          }}\n                        >\n                          <div className={style.BoardItem} key={item[1].boardName}>\n                            <span className={style.BoardName}>\n                               {item[1].boardName}\n                            </span>\n                          </div>\n                        </Link>\n                      ))}\n                  </div>\n                ) : (\n                  <p>\n                    You haven't created any boards. Kindly click on the 'Create\n                    Board' button in the navigation bar to create a board.\n                  </p>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      );\n    }\n    \n\nexport default AllBoards;\n"]},"metadata":{},"sourceType":"module"}