{"ast":null,"code":"var _jsxFileName = \"/home/wws/Desktop/pro-organiser-application/src/pages/Board/Board.js\";\nimport React, { useState, useEffect } from \"react\";\nimport style from './Boards.module.css';\nimport Axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../common/loader/Loader\";\nexport const Boards = props => {\n  const name = props.match.params.boardName;\n  const [columnData, setColumnData] = useState({});\n  const [showColumn, setShowColumn] = useState(false);\n  const [loading, setLoading] = useState(true);\n  document.title = \"Pro Organizer\";\n  useEffect(() => {\n    setShowColumn(false);\n    getColumnData();\n  }, [showColumn]);\n\n  const getColumnData = () => {\n    Axios.get(\"https://pro-organiser-app.firebaseio.com/boardContents/-M5MReGNu5ENFe8FCNzL/column\").then(response => {\n      setColumnData(response.data);\n      setLoading(false);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.BoardContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.BoardsTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Boards\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), showColumn ? /*#__PURE__*/React.createElement(\"div\", {\n    className: style.BoardsData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }\n  }, boardContents && Object.entries(columnData).map(item => /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: \"/\" + item[1].boardName,\n      state: {\n        type: item[1].boardType,\n        members: item[1].members,\n        boardId: item[0],\n        key: item[0]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.BoardItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: style.BoardName,\n    key: item[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, item[1].boardName))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, \"You haven't created any Column. Kindly click on the 'Create Board' button in the navigation bar to create a board.\"))));\n};\nexport default Boards;","map":{"version":3,"sources":["/home/wws/Desktop/pro-organiser-application/src/pages/Board/Board.js"],"names":["React","useState","useEffect","style","Axios","Link","Loader","Boards","props","name","match","params","boardName","columnData","setColumnData","showColumn","setShowColumn","loading","setLoading","document","title","getColumnData","get","then","response","data","catch","err","console","log","BoardContainer","BoardsTitle","BoardsData","boardContents","Object","entries","map","item","pathname","state","type","boardType","members","boardId","key","BoardItem","BoardName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport style from  './Boards.module.css';\nimport Axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../common/loader/Loader\";\n\nexport const Boards = (props) => {\n    const name = props.match.params.boardName;\n\n    const [columnData, setColumnData] = useState({});\n    const [showColumn, setShowColumn] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    document.title = \"Pro Organizer\";\n\n    useEffect(() => {\n        setShowColumn(false);\n        getColumnData();\n    }, [showColumn]);\n  \n    const getColumnData = () => {\n        Axios\n        .get(\"https://pro-organiser-app.firebaseio.com/boardContents/-M5MReGNu5ENFe8FCNzL/column\")\n        .then((response) => {\n          setColumnData(response.data);\n          setLoading(false);\n        })\n        .catch((err) => console.log(err));\n    };\n\n    return (\n        <div>\n          <br />\n          {loading ? (\n            <Loader></Loader>\n          ) : (\n            <>\n              <div className={style.BoardContainer}>\n                <div className={style.BoardsTitle}>\n                    <span>Boards</span>\n                </div>\n                <br />\n                {showColumn ? (\n                  <div className={style.BoardsData}>\n                    {boardContents &&\n                      Object.entries(columnData).map((item) => (\n                        <Link\n                          to={{\n                            pathname: \"/\" + item[1].boardName,\n                            state: {\n                              type: item[1].boardType,\n                              members: item[1].members,\n                              boardId: item[0],\n                              key:item[0],\n                            },\n                          }}\n                        >\n                          <div className={style.BoardItem}>\n                            <span className={style.BoardName} key={item[0]}>\n                               {item[1].boardName}\n                            </span>\n                          </div>\n                        </Link>\n                      ))}\n                  </div>\n                ) : (\n                  <p>\n                    You haven't created any Column. Kindly click on the 'Create\n                    Board' button in the navigation bar to create a board.\n                  </p>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      );\n    }\n    \n\nexport default Boards;"]},"metadata":{},"sourceType":"module"}