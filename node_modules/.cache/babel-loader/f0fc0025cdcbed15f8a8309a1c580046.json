{"ast":null,"code":"var _jsxFileName = \"/home/wws/Desktop/pro-organiser-application/src/components/card/Card.js\";\nimport React, { useState, useEffect } from \"react\";\nimport style from \"./Card.module.css\";\nimport Modal from './../../common/Modal/Modal';\nimport Axios from \"axios\";\n\nfunction Card(props) {\n  const [showModal, setShowModal] = useState(false);\n  const {\n    members,\n    columnId,\n    boardId,\n    boardTitle,\n    isCardDragged\n  } = props;\n  const [cardData, setCardData] = useState(\"\");\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false); // to split members list string into array\n\n  const memberArr = members.split(\",\");\n  const AddCard = React.useRef();\n  useEffect(() => {\n    // modalOpenHandler();\n    getCardData();\n  }, [showModal]);\n\n  const getCardData = () => {\n    Axios.get(`https://pro-organiser-app.firebaseio.com/boardContents/${boardId}/column/${columnId}/card.json`).then(response => {\n      setCardData(response.data);\n    }).catch(error => console.log(error));\n  };\n\n  const handleAddCardClick = event => {\n    event.preventDefault();\n\n    if (AddCard.current.value.length === 0) {\n      setFormComplete(false);\n      setFormIncompleteError(true);\n    } else {\n      // add column name in firebase\n      Axios.post(`https://pro-organiser-app.firebaseio.com/boardContents/${props.boardId}/column.json`, {\n        name: cardTitle\n      }).then(response => {\n        alert(\"column added succesfully\");\n        props.setShowColumn(true);\n      }).catch(err => console.log(err));\n      setShowModal(false);\n    }\n  };\n\n  const onSelectChange = e => {\n    const values = [...e.target.selectedOptions].map(opt => opt.value);\n    setTeam(values);\n  };\n\n  const modalCloseHandler = () => {\n    setShowModal(false);\n  };\n\n  let modalContent = showModal ? /*#__PURE__*/React.createElement(React.Fragment, null, formIncompleteError ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 30\n    }\n  }, \"Kindly complete the form before adding Card\") : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.AddCardForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Add a Card\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.FormInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: style.Lable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 41\n    }\n  }, \" Enter a title for your task:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    defaultValue: editDetails ? cardName : \"\",\n    placeholder: \"e.g. Add a new icon\",\n    onChange: e => setCardTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 107\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.FormInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: style.Lable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 41\n    }\n  }, \"Choose members for this task(select multiple,if needed)\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"membersList\",\n    name: \"membersList\",\n    defaultValue: editDetails ? teamDetail : \"\",\n    multiple: true,\n    onChange: onSelectChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 133\n    }\n  }, memberArr.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    value: item,\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 284\n    }\n  }, item)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.FormInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: style.Lable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 41\n    }\n  }, \"Enter a column name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"column_name\",\n    value: cardTitle,\n    placeholder: \"Enter a column name\",\n    ref: AddCard,\n    onChange: e => {\n      e.preventDefault();\n      setCardTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 98\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.FormInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: style.Lable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 41\n    }\n  }, \"Enter a column name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"column_name\",\n    value: cardTitle,\n    placeholder: \"Enter a column name\",\n    ref: AddCard,\n    onChange: e => {\n      e.preventDefault();\n      setCardTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 98\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: style.AddButton,\n    id: \"CreateColumn\",\n    disabled: formComplete,\n    onClick: handleAddCardClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Add Column\")) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.CardData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, cardData && Object.entries(cardData).map(item => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.CardInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.CardHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.CardName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, item[1].cardTitle)), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.CardIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 16\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.CardBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: style.AddCardBtn,\n    onClick: () => setShowModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Add a Card\"))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), showModal && /*#__PURE__*/React.createElement(Modal, {\n    content: modalContent,\n    close: modalCloseHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Card;","map":{"version":3,"sources":["/home/wws/Desktop/pro-organiser-application/src/components/card/Card.js"],"names":["React","useState","useEffect","style","Modal","Axios","Card","props","showModal","setShowModal","members","columnId","boardId","boardTitle","isCardDragged","cardData","setCardData","cardTitle","setCardTitle","formComplete","setFormComplete","formIncompleteError","setFormIncompleteError","memberArr","split","AddCard","useRef","getCardData","get","then","response","data","catch","error","console","log","handleAddCardClick","event","preventDefault","current","value","length","post","name","alert","setShowColumn","err","onSelectChange","e","values","target","selectedOptions","map","opt","setTeam","modalCloseHandler","modalContent","color","AddCardForm","FormInput","Lable","editDetails","cardName","teamDetail","item","AddButton","CardData","Object","entries","CardInfo","CardHeader","CardName","CardIcon","CardBtn","AddCardBtn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport style from \"./Card.module.css\";\nimport Modal from './../../common/Modal/Modal';\nimport Axios from \"axios\";\n\nfunction Card(props) {\n  const [showModal, setShowModal] = useState(false);\n  const { members, columnId, boardId, boardTitle, isCardDragged } = props;\n  const [cardData, setCardData] = useState(\"\");\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false);\n\n    // to split members list string into array\n    const memberArr = members.split(\",\");\n\n  const AddCard = React.useRef();\n\n  useEffect(() => {\n    // modalOpenHandler();\n    getCardData();\n  }, [showModal]);\n\n\n  const getCardData = () => {\n    Axios\n    .get(`https://pro-organiser-app.firebaseio.com/boardContents/${boardId}/column/${columnId}/card.json`)\n    .then((response) => {\n        setCardData(response.data);\n    })\n    .catch((error) => console.log(error));\n};\n\n  const handleAddCardClick = (event) => {\n    event.preventDefault();\n        if(AddCard.current.value.length === 0){\n          setFormComplete(false);\n          setFormIncompleteError(true);\n    } else {\n      // add column name in firebase\n      Axios.post(`https://pro-organiser-app.firebaseio.com/boardContents/${props.boardId}/column.json`, {\n        name: cardTitle,\n      })\n        .then((response) => {\n          alert(\"column added succesfully\");\n          props.setShowColumn(true);\n        })\n        .catch((err) => console.log(err));\n\n      setShowModal(false);\n    }\n  };\n\n  const onSelectChange = (e) => {\n    const values = [...e.target.selectedOptions].map((opt) => opt.value);\n    setTeam(values);\n  };\n\n  const  modalCloseHandler = () => {setShowModal(false)};\n\n  let modalContent = showModal ? \n\n  (\n      <>\n      {formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding Card</p> : null}\n      <div className={style.AddCardForm}>\n        <h2>Add a Card</h2>\n       <div className={style.FormInput}><span className={style.Lable}> Enter a title for your task:</span><input type=\"text\" id=\"title\" defaultValue={editDetails ? cardName : \"\"} placeholder=\"e.g. Add a new icon\" onChange={(e) => setCardTitle(e.target.value)}/></div>\n       <div className={style.FormInput}><span className={style.Lable}>Choose members for this task(select multiple,if needed)</span><select  id=\"membersList\" name=\"membersList\" defaultValue={editDetails ? teamDetail : \"\"} multiple onChange={onSelectChange}>{memberArr.map((item) => (<option value={item} key={item}>{item}</option>))}</select></div>\n       <div className={style.FormInput}><span className={style.Lable}>Enter a column name:</span><input type=\"text\" id=\"column_name\" value={cardTitle} placeholder=\"Enter a column name\" ref={AddCard} onChange={(e) => {e.preventDefault(); setCardTitle(e.target.value);}}/></div>\n       <div className={style.FormInput}><span className={style.Lable}>Enter a column name:</span><input type=\"text\" id=\"column_name\" value={cardTitle} placeholder=\"Enter a column name\" ref={AddCard} onChange={(e) => {e.preventDefault(); setCardTitle(e.target.value);}}/></div>\n      </div>\n      <button className={style.AddButton} id=\"CreateColumn\" disabled={formComplete} onClick={handleAddCardClick}>Add Column</button>\n      </>\n  )\n  :null;\n\n  return (\n    <div>\n      <div className={style.CardData}>\n      {cardData &&\n        Object.entries(cardData).map((item) => (\n          <>\n          <div className={style.CardInfo}>\n          <div className={style.CardHeader}>\n          <div className={style.CardName}>{item[1].cardTitle}</div>\n          </div>\n          <div className={style.CardIcon}>\n          <div><i className=\"fas fa-list\"></i></div>\n          </div>\n          </div>\n          <div className={style.CardBtn}>\n            <button className={style.AddCardBtn} onClick={() => setShowModal(true)}>Add a Card</button>\n          </div>\n          </>\n         ) )}\n      </div>\n        <br />\n        {showModal && (\n        \n            <Modal  \n                content = {modalContent}\n                close = {modalCloseHandler}/> \n        )}\n       \n    </div>\n)\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}