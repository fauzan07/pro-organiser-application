{"ast":null,"code":"var _jsxFileName = \"/home/wws/Desktop/pro-organiser-application/src/components/card/Card.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./Card.module.css\";\nimport modalStyles from \"../Modal/Modal.module.css\";\nimport { Modal } from \"../Modal/Modal\";\nimport Axios from \"axios\";\n\nfunction Card(props) {\n  const [showModal, setShowModal] = useState(false);\n  const {\n    members,\n    columnId,\n    boardId,\n    boardTitle,\n    isCardDragged\n  } = props; // to split members list string into array\n\n  const memberArr = members.split(\",\");\n  const [isCardAdded, setIsCardAdded] = useState(false);\n  const [isCardDelete, setIsCardDelete] = useState(false);\n  const [isCardEdited, setIsCardEdited] = useState(false); // card states\n\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const [team, setTeam] = useState([]);\n  const [descrptn, setDescrptn] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\"); //const [showCard, setShowCard] = useState(false);\n  // to get column data\n\n  const [cardData, setCardData] = useState({}); // to handle details of card\n\n  const [showDetails, setShowDetails] = useState(false);\n  const [cardName, setCardName] = useState(\"\");\n  const [descDetails, setDescDetails] = useState(\"\");\n  const [dateDetails, setDateDetails] = useState(\"\");\n  const [teamDetail, setTeamDetails] = useState([]);\n  const [editDetails, setEditDetails] = useState(false);\n  const [cardId, setCardId] = useState(\"\"); // to get today's date iin yyyy-mm-dd format\n\n  var today = new Date();\n  var month,\n      day = null;\n\n  if (today.getMonth() < 10 || today.getDate() < 10) {\n    month = \"0\" + (today.getMonth() + 1);\n    day = \"0\" + today.getDate();\n  }\n\n  var date = today.getFullYear() + \"-\" + month + \"-\" + day;\n  useEffect(() => {\n    setIsCardAdded(false);\n    setIsCardDelete(false);\n    setIsCardEdited(false);\n    getCardData();\n  }, [isCardAdded, isCardDragged, isCardDelete, isCardEdited]); // to get card details from firebase\n\n  const getCardData = () => {\n    Axios.get(`https://pro-organizer-c3f1c.firebaseio.com/boardContents/${boardId}/column/${columnId}/card.json`).then(res => {\n      setCardData(res.data); // if (cardData !== null) {\n      //   setShowCard(true);\n      // } else {\n      //   setShowCard(false);\n      // }\n    }).catch(err => console.log(\"Error in getCardData\" + err));\n  }; //  to handle add card modal click\n\n\n  const handleAddCardClick = e => {\n    //   check if all input is taken\n    if ((cardTitle === \"\" || descrptn === \"\" || dueDate === \"\") && editDetails === false) {\n      document.getElementById(\"cardInputError\").innerHTML = \"<strong>Note</strong>: All the fields are required!!!\";\n    } else {\n      // if user wants to edit then put request is used\n      if (editDetails) {\n        Axios.put(`https://pro-organizer-c3f1c.firebaseio.com/boardContents/${boardId}/column/${columnId}/card/${cardId}.json`, {\n          cardTitle: cardTitle === \"\" ? cardName : cardTitle,\n          team: team.length === 0 ? teamDetail : team,\n          descrptn: descrptn === \"\" ? descDetails : descrptn,\n          dueDate: dueDate === \"\" ? dateDetails : dueDate\n        }).then(res => {\n          alert(\"card edited succesfully\");\n          setIsCardEdited(true);\n        }).catch(err => console.log(\"Error in editDetails\" + err));\n      } //  if user wants to add a new card\n      else {\n          Axios.post(`https://pro-organizer-c3f1c.firebaseio.com/boardContents/${boardId}/column/${columnId}/card.json`, {\n            cardTitle: cardTitle,\n            team: team,\n            descrptn: descrptn,\n            dueDate: dueDate\n          }).then(res => {\n            alert(\"card added succesfully\"); // call new card\n            // getCardData();\n\n            setIsCardAdded(true);\n          }).catch(err => console.log(\"Error\" + err));\n        }\n\n      setShowModal(false);\n      setEditDetails(false);\n      setCardTitle(\"\");\n      setTeam([]);\n      setDescrptn(\"\");\n      setDueDate(\"\");\n    }\n  }; // on click of card this function shows details\n\n\n  const onCardClick = (cardName, descDetails, dateDetails, teamDetails, cardId, e) => {\n    setShowDetails(true);\n    setCardName(cardName);\n    setDescDetails(descDetails);\n    setDateDetails(dateDetails);\n    setTeamDetails(teamDetails);\n    setCardId(cardId);\n  }; // handles edit button click\n\n\n  const handleEdit = e => {\n    setShowDetails(false);\n    setShowModal(true);\n    setEditDetails(true);\n  }; // handles archive on card archive click\n\n\n  const handleArchive = e => {\n    Axios.delete(`https://pro-organizer-c3f1c.firebaseio.com/boardContents/${boardId}/column/${columnId}/card/${cardId}.json`).then(res => {\n      alert(\"card archived succesfully\");\n      setIsCardDelete(true);\n    }).catch(err => console.log(\"Error\" + err));\n    setShowDetails(false);\n  };\n\n  const onSelectChange = e => {\n    const values = [...e.target.selectedOptions].map(opt => opt.value);\n    setTeam(values);\n  };\n\n  const drag = (itemData, dragCardId, e) => {\n    var draggedCard = {\n      columnId: columnId,\n      dragCardId: dragCardId,\n      cardData: itemData\n    };\n    e.dataTransfer.setData(\"text/plain\", JSON.stringify(draggedCard));\n    console.log(e.dataTransfer.getData(\"text/plain\"));\n  };\n\n  const allowDrop = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.showCardContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, cardData && Object.entries(cardData).map(item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.cardHeader,\n    id: item[0],\n    value: item[1].cardTitle,\n    onClick: e => onCardClick(item[1].cardTitle, item[1].descrptn, item[1].dueDate, item[1].team, item[0], e),\n    draggable: \"true\",\n    onDragStart: e => drag(item[1], item[0], e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, item[1].cardTitle, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.cardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }\n  }, item[1].team !== undefined ? item[1].team.map(i => /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.cardMembers,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, i.charAt(0))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 23\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"addCardBox\",\n    className: styles.addCardBox,\n    onClick: () => setShowModal(true),\n    onDragOver: allowDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, \"Add a card\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }), showModal && /*#__PURE__*/React.createElement(Modal, {\n    flag: \"addCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    style: {\n      width: \"5%\",\n      height: \"10%\"\n    },\n    onClick: () => {\n      setShowModal(false);\n      setEditDetails(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"h5\", {\n    className: modalStyles.modalTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, \"Add Card\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: modalStyles.cardFormContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    className: modalStyles.cardInputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, \"Enter a title for your task:\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"title\",\n    type: \"text\",\n    className: modalStyles.cardInputBox,\n    defaultValue: editDetails ? cardName : \"\",\n    placeholder: \"e.g. Add a new icon\",\n    onChange: e => setCardTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"members\",\n    className: modalStyles.cardInputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, \"Choose members for this task(select multiple,if needed)\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"membersList\",\n    name: \"membersList\",\n    defaultValue: editDetails ? teamDetail : \"\",\n    className: modalStyles.cardInputBox,\n    multiple: true,\n    onChange: onSelectChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, memberArr.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    value: item,\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }, item))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    className: modalStyles.cardInputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, \"Add the description for your task\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"description\",\n    type: \"text\",\n    className: modalStyles.cardInputBox,\n    defaultValue: editDetails ? descDetails : \"\",\n    placeholder: \"Add your description here\",\n    onChange: e => setDescrptn(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"due_date\",\n    className: modalStyles.cardInputTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, \"Select the due-date for this task\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"due_date\",\n    type: \"date\",\n    min: date,\n    className: modalStyles.cardInputBox,\n    defaultValue: editDetails ? dateDetails : \"\",\n    onChange: e => setDueDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"CreateCard\",\n    className: \"btn btn-primary\",\n    onClick: handleAddCardClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, \"Add Card\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"cardInputError\",\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }\n  }), showDetails && /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    style: {\n      width: \"5%\"\n    },\n    onClick: () => setShowDetails(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 13\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.cardDetailContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.cardDetailHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, cardName), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.editAndArcbtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"editBtn\",\n    className: \"btn btn-primary\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 19\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"archiveBtn\",\n    style: {\n      marginLeft: \"10px\"\n    },\n    className: \"btn btn-danger\",\n    onClick: handleArchive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 19\n    }\n  }, \"Archive\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 15\n    }\n  }, \"in \", boardTitle), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 15\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 15\n    }\n  }, descDetails), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 15\n    }\n  }, \"Members\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 15\n    }\n  }, teamDetail !== undefined && teamDetail.map(i => /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.cardMembers,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 21\n    }\n  }, i.charAt(0)))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 15\n    }\n  }, \"Due Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 15\n    }\n  }, dateDetails)))));\n}\n\nexport default Card;","map":{"version":3,"sources":["/home/wws/Desktop/pro-organiser-application/src/components/card/Card.js"],"names":["React","useState","useEffect","styles","modalStyles","Modal","Axios","Card","props","showModal","setShowModal","members","columnId","boardId","boardTitle","isCardDragged","memberArr","split","isCardAdded","setIsCardAdded","isCardDelete","setIsCardDelete","isCardEdited","setIsCardEdited","cardTitle","setCardTitle","team","setTeam","descrptn","setDescrptn","dueDate","setDueDate","cardData","setCardData","showDetails","setShowDetails","cardName","setCardName","descDetails","setDescDetails","dateDetails","setDateDetails","teamDetail","setTeamDetails","editDetails","setEditDetails","cardId","setCardId","today","Date","month","day","getMonth","getDate","date","getFullYear","getCardData","get","then","res","data","catch","err","console","log","handleAddCardClick","e","document","getElementById","innerHTML","put","length","alert","post","onCardClick","teamDetails","handleEdit","handleArchive","delete","onSelectChange","values","target","selectedOptions","map","opt","value","drag","itemData","dragCardId","draggedCard","dataTransfer","setData","JSON","stringify","getData","allowDrop","preventDefault","showCardContainer","Object","entries","item","cardHeader","cardContent","undefined","i","cardMembers","charAt","addCardBox","width","height","modalTitle","cardFormContainer","cardInputTitle","cardInputBox","color","cardDetailContainer","cardDetailHeader","editAndArcbtn","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,OAArB;AAA8BC,IAAAA,UAA9B;AAA0CC,IAAAA;AAA1C,MAA4DP,KAAlE,CAFmB,CAGnB;;AACA,QAAMQ,SAAS,GAAGL,OAAO,CAACM,KAAR,CAAc,GAAd,CAAlB;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACqB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,KAAD,CAAhD,CARmB,CASnB;;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACyB,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC2B,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC6B,OAAD,EAAUC,UAAV,IAAwB9B,QAAQ,CAAC,EAAD,CAAtC,CAbmB,CAcnB;AAEA;;AACA,QAAM,CAAC+B,QAAD,EAAWC,WAAX,IAA0BhC,QAAQ,CAAC,EAAD,CAAxC,CAjBmB,CAmBnB;;AACA,QAAM,CAACiC,WAAD,EAAcC,cAAd,IAAgClC,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACmC,QAAD,EAAWC,WAAX,IAA0BpC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqC,WAAD,EAAcC,cAAd,IAAgCtC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACuC,WAAD,EAAcC,cAAd,IAAgCxC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACyC,UAAD,EAAaC,cAAb,IAA+B1C,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAAC2C,WAAD,EAAcC,cAAd,IAAgC5C,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAC6C,MAAD,EAASC,SAAT,IAAsB9C,QAAQ,CAAC,EAAD,CAApC,CA1BmB,CA4BnB;;AACA,MAAI+C,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAIC,KAAJ;AAAA,MACEC,GAAG,GAAG,IADR;;AAEA,MAAIH,KAAK,CAACI,QAAN,KAAmB,EAAnB,IAAyBJ,KAAK,CAACK,OAAN,KAAkB,EAA/C,EAAmD;AACjDH,IAAAA,KAAK,GAAG,OAAOF,KAAK,CAACI,QAAN,KAAmB,CAA1B,CAAR;AACAD,IAAAA,GAAG,GAAG,MAAMH,KAAK,CAACK,OAAN,EAAZ;AACD;;AACD,MAAIC,IAAI,GAAGN,KAAK,CAACO,WAAN,KAAsB,GAAtB,GAA4BL,KAA5B,GAAoC,GAApC,GAA0CC,GAArD;AAEAjD,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAE,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAiC,IAAAA,WAAW;AACZ,GALQ,EAKN,CAACtC,WAAD,EAAcH,aAAd,EAA6BK,YAA7B,EAA2CE,YAA3C,CALM,CAAT,CAtCmB,CA6CnB;;AACA,QAAMkC,WAAW,GAAG,MAAM;AACxBlD,IAAAA,KAAK,CAACmD,GAAN,CACG,4DAA2D5C,OAAQ,WAAUD,QAAS,YADzF,EAGG8C,IAHH,CAGSC,GAAD,IAAS;AACb1B,MAAAA,WAAW,CAAC0B,GAAG,CAACC,IAAL,CAAX,CADa,CAEb;AACA;AACA;AACA;AACA;AACD,KAVH,EAWGC,KAXH,CAWUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,yBAAyBF,GAArC,CAXlB;AAYD,GAbD,CA9CmB,CA6DnB;;;AACA,QAAMG,kBAAkB,GAAIC,CAAD,IAAO;AAChC;AACA,QACE,CAAC1C,SAAS,KAAK,EAAd,IAAoBI,QAAQ,KAAK,EAAjC,IAAuCE,OAAO,KAAK,EAApD,KACAc,WAAW,KAAK,KAFlB,EAGE;AACAuB,MAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,SAA1C,GACE,uDADF;AAED,KAND,MAMO;AACL;AACA,UAAIzB,WAAJ,EAAiB;AACftC,QAAAA,KAAK,CAACgE,GAAN,CACG,4DAA2DzD,OAAQ,WAAUD,QAAS,SAAQkC,MAAO,OADxG,EAEE;AACEtB,UAAAA,SAAS,EAAEA,SAAS,KAAK,EAAd,GAAmBY,QAAnB,GAA8BZ,SAD3C;AAEEE,UAAAA,IAAI,EAAEA,IAAI,CAAC6C,MAAL,KAAgB,CAAhB,GAAoB7B,UAApB,GAAiChB,IAFzC;AAGEE,UAAAA,QAAQ,EAAEA,QAAQ,KAAK,EAAb,GAAkBU,WAAlB,GAAgCV,QAH5C;AAIEE,UAAAA,OAAO,EAAEA,OAAO,KAAK,EAAZ,GAAiBU,WAAjB,GAA+BV;AAJ1C,SAFF,EASG4B,IATH,CASSC,GAAD,IAAS;AACba,UAAAA,KAAK,CAAC,yBAAD,CAAL;AACAjD,UAAAA,eAAe,CAAC,IAAD,CAAf;AACD,SAZH,EAaGsC,KAbH,CAaUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,yBAAyBF,GAArC,CAblB;AAcD,OAfD,CAgBA;AAhBA,WAiBK;AACHxD,UAAAA,KAAK,CAACmE,IAAN,CACG,4DAA2D5D,OAAQ,WAAUD,QAAS,YADzF,EAEE;AACEY,YAAAA,SAAS,EAAEA,SADb;AAEEE,YAAAA,IAAI,EAAEA,IAFR;AAGEE,YAAAA,QAAQ,EAAEA,QAHZ;AAIEE,YAAAA,OAAO,EAAEA;AAJX,WAFF,EASG4B,IATH,CASSC,GAAD,IAAS;AACba,YAAAA,KAAK,CAAC,wBAAD,CAAL,CADa,CAEb;AACA;;AACArD,YAAAA,cAAc,CAAC,IAAD,CAAd;AACD,WAdH,EAeG0C,KAfH,CAeUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,UAAUF,GAAtB,CAflB;AAgBD;;AAEDpD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAmC,MAAAA,cAAc,CAAC,KAAD,CAAd;AAEApB,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GAtDD,CA9DmB,CAsHnB;;;AACA,QAAM2C,WAAW,GAAG,CAClBtC,QADkB,EAElBE,WAFkB,EAGlBE,WAHkB,EAIlBmC,WAJkB,EAKlB7B,MALkB,EAMlBoB,CANkB,KAOf;AACH/B,IAAAA,cAAc,CAAC,IAAD,CAAd;AAEAE,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,IAAAA,cAAc,CAACD,WAAD,CAAd;AACAG,IAAAA,cAAc,CAACD,WAAD,CAAd;AAEAG,IAAAA,cAAc,CAACgC,WAAD,CAAd;AACA5B,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD,GAhBD,CAvHmB,CAwInB;;;AACA,QAAM8B,UAAU,GAAIV,CAAD,IAAO;AACxB/B,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAzB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAmC,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAJD,CAzImB,CA8InB;;;AACA,QAAMgC,aAAa,GAAIX,CAAD,IAAO;AAC3B5D,IAAAA,KAAK,CAACwE,MAAN,CACG,4DAA2DjE,OAAQ,WAAUD,QAAS,SAAQkC,MAAO,OADxG,EAGGY,IAHH,CAGSC,GAAD,IAAS;AACba,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACAnD,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KANH,EAOGwC,KAPH,CAOUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,UAAUF,GAAtB,CAPlB;AASA3B,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAXD;;AAaA,QAAM4C,cAAc,GAAIb,CAAD,IAAO;AAC5B,UAAMc,MAAM,GAAG,CAAC,GAAGd,CAAC,CAACe,MAAF,CAASC,eAAb,EAA8BC,GAA9B,CAAmCC,GAAD,IAASA,GAAG,CAACC,KAA/C,CAAf;AACA1D,IAAAA,OAAO,CAACqD,MAAD,CAAP;AACD,GAHD;;AAKA,QAAMM,IAAI,GAAG,CAACC,QAAD,EAAWC,UAAX,EAAuBtB,CAAvB,KAA6B;AACxC,QAAIuB,WAAW,GAAG;AAChB7E,MAAAA,QAAQ,EAAEA,QADM;AAEhB4E,MAAAA,UAAU,EAAEA,UAFI;AAGhBxD,MAAAA,QAAQ,EAAEuD;AAHM,KAAlB;AAMArB,IAAAA,CAAC,CAACwB,YAAF,CAAeC,OAAf,CAAuB,YAAvB,EAAqCC,IAAI,CAACC,SAAL,CAAeJ,WAAf,CAArC;AACA1B,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACwB,YAAF,CAAeI,OAAf,CAAuB,YAAvB,CAAZ;AACD,GATD;;AAWA,QAAMC,SAAS,GAAI7B,CAAD,IAAO;AACvBA,IAAAA,CAAC,CAAC8B,cAAF;AACD,GAFD;;AAGA,sBACE,uDAEE;AAAK,IAAA,SAAS,EAAE7F,MAAM,CAAC8F,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjE,QAAQ,IACPkE,MAAM,CAACC,OAAP,CAAenE,QAAf,EAAyBmD,GAAzB,CAA8BiB,IAAD,iBAC3B;AAAK,IAAA,GAAG,EAAEA,IAAI,CAAC,CAAD,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAEjG,MAAM,CAACkG,UADpB;AAEE,IAAA,EAAE,EAAED,IAAI,CAAC,CAAD,CAFV;AAGE,IAAA,KAAK,EAAEA,IAAI,CAAC,CAAD,CAAJ,CAAQ5E,SAHjB;AAIE,IAAA,OAAO,EAAG0C,CAAD,IACPQ,WAAW,CACT0B,IAAI,CAAC,CAAD,CAAJ,CAAQ5E,SADC,EAET4E,IAAI,CAAC,CAAD,CAAJ,CAAQxE,QAFC,EAGTwE,IAAI,CAAC,CAAD,CAAJ,CAAQtE,OAHC,EAITsE,IAAI,CAAC,CAAD,CAAJ,CAAQ1E,IAJC,EAKT0E,IAAI,CAAC,CAAD,CALK,EAMTlC,CANS,CALf;AAcE,IAAA,SAAS,EAAC,MAdZ;AAeE,IAAA,WAAW,EAAGA,CAAD,IAAOoB,IAAI,CAACc,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,EAAmBlC,CAAnB,CAf1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBGkC,IAAI,CAAC,CAAD,CAAJ,CAAQ5E,SAjBX,eAkBE;AAAK,IAAA,SAAS,EAAErB,MAAM,CAACmG,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAAC,CAAD,CAAJ,CAAQ1E,IAAR,KAAiB6E,SAAjB,GACCH,IAAI,CAAC,CAAD,CAAJ,CAAQ1E,IAAR,CAAayD,GAAb,CAAkBqB,CAAD,iBACf;AAAM,IAAA,SAAS,EAAErG,MAAM,CAACsG,WAAxB;AAAqC,IAAA,GAAG,EAAED,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,CAAC,CAACE,MAAF,CAAS,CAAT,CADH,CADF,CADD,gBAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAJF,CAlBF,CADF,CADF,CAFJ,CAFF,eA8CE;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,SAAS,EAAEvG,MAAM,CAACwG,UAFpB;AAGE,IAAA,OAAO,EAAE,MAAMjG,YAAY,CAAC,IAAD,CAH7B;AAIE,IAAA,UAAU,EAAEqF,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9CF,eAsDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtDF,EAuDGtF,SAAS,iBACR,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,oBAAa,OAHf;AAIE,IAAA,KAAK,EAAE;AAAEmG,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,MAAM,EAAE;AAAvB,KAJT;AAKE,IAAA,OAAO,EAAE,MAAM;AACbnG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAmC,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAI,IAAA,SAAS,EAAEzC,WAAW,CAAC0G,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,eAeE;AAAK,IAAA,SAAS,EAAE1G,WAAW,CAAC2G,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,SAAS,EAAE3G,WAAW,CAAC4G,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,eAIE;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAE5G,WAAW,CAAC6G,YAHzB;AAIE,IAAA,YAAY,EAAErE,WAAW,GAAGR,QAAH,GAAc,EAJzC;AAKE,IAAA,WAAW,EAAC,qBALd;AAME,IAAA,QAAQ,EAAG8B,CAAD,IAAOzC,YAAY,CAACyC,CAAC,CAACe,MAAF,CAASI,KAAV,CAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAcE;AAAO,IAAA,OAAO,EAAC,SAAf;AAAyB,IAAA,SAAS,EAAEjF,WAAW,CAAC4G,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAdF,eAiBE;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,YAAY,EAAEpE,WAAW,GAAGF,UAAH,GAAgB,EAH3C;AAIE,IAAA,SAAS,EAAEtC,WAAW,CAAC6G,YAJzB;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,QAAQ,EAAElC,cANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG/D,SAAS,CAACmE,GAAV,CAAeiB,IAAD,iBACb;AAAQ,IAAA,KAAK,EAAEA,IAAf;AAAqB,IAAA,GAAG,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,CADD,CARH,CAjBF,eA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,eAiCE;AAAO,IAAA,OAAO,EAAC,aAAf;AAA6B,IAAA,SAAS,EAAEhG,WAAW,CAAC4G,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAjCF,eAoCE;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAE5G,WAAW,CAAC6G,YAHzB;AAIE,IAAA,YAAY,EAAErE,WAAW,GAAGN,WAAH,GAAiB,EAJ5C;AAKE,IAAA,WAAW,EAAC,2BALd;AAME,IAAA,QAAQ,EAAG4B,CAAD,IAAOrC,WAAW,CAACqC,CAAC,CAACe,MAAF,CAASI,KAAV,CAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,eA4CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CF,eA8CE;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,SAAS,EAAEjF,WAAW,CAAC4G,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCA9CF,eAiDE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,GAAG,EAAE1D,IAHP;AAIE,IAAA,SAAS,EAAElD,WAAW,CAAC6G,YAJzB;AAKE,IAAA,YAAY,EAAErE,WAAW,GAAGJ,WAAH,GAAiB,EAL5C;AAME,IAAA,QAAQ,EAAG0B,CAAD,IAAOnC,UAAU,CAACmC,CAAC,CAACe,MAAF,CAASI,KAAV,CAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjDF,eAyDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzDF,eA2DE;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,IAAA,OAAO,EAAEpB,kBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3DF,eAkEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlEF,CAfF,eAmFE;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAyB,IAAA,KAAK,EAAE;AAAEiD,MAAAA,KAAK,EAAE;AAAT,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnFF,CAxDJ,eA8IE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9IF,EA+IGhF,WAAW,iBACV,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,oBAAa,OAHf;AAIE,IAAA,KAAK,EAAE;AAAE0E,MAAAA,KAAK,EAAE;AAAT,KAJT;AAKE,IAAA,OAAO,EAAE,MAAMzE,cAAc,CAAC,KAAD,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,IAAA,SAAS,EAAEhC,MAAM,CAACgH,mBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEhH,MAAM,CAACiH,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhF,QAAL,CADF,eAEE;AAAK,IAAA,SAAS,EAAEjC,MAAM,CAACkH,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,EAAE,EAAC,SAFL;AAGE,IAAA,SAAS,EAAC,iBAHZ;AAIE,IAAA,OAAO,EAAEzC,UAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,EAAE,EAAC,YAFL;AAGE,IAAA,KAAK,EAAE;AAAE0C,MAAAA,UAAU,EAAE;AAAd,KAHT;AAIE,IAAA,SAAS,EAAC,gBAJZ;AAKE,IAAA,OAAO,EAAEzC,aALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,CAFF,CADF,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAS/D,UAAT,CAvBF,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAzBF,eA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMwB,WAAN,CA1BF,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,eA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA5BF,eA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,UAAU,KAAK6D,SAAf,IACC7D,UAAU,CAACyC,GAAX,CAAgBqB,CAAD,iBACb;AAAM,IAAA,SAAS,EAAErG,MAAM,CAACsG,WAAxB;AAAqC,IAAA,GAAG,EAAED,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,CAAC,CAACE,MAAF,CAAS,CAAT,CADH,CADF,CAFJ,CA7BF,eAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCF,eAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtCF,eAuCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMlE,WAAN,CAvCF,CAVF,CADF,CAhJJ,CADF;AA0MD;;AAED,eAAejC,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./Card.module.css\";\nimport modalStyles from \"../Modal/Modal.module.css\";\nimport { Modal } from \"../Modal/Modal\";\nimport Axios from \"axios\";\n\nfunction Card(props) {\n  const [showModal, setShowModal] = useState(false);\n  const { members, columnId, boardId, boardTitle, isCardDragged } = props;\n  // to split members list string into array\n  const memberArr = members.split(\",\");\n\n  const [isCardAdded, setIsCardAdded] = useState(false);\n  const [isCardDelete, setIsCardDelete] = useState(false);\n  const [isCardEdited, setIsCardEdited] = useState(false);\n  // card states\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const [team, setTeam] = useState([]);\n  const [descrptn, setDescrptn] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n  //const [showCard, setShowCard] = useState(false);\n\n  // to get column data\n  const [cardData, setCardData] = useState({});\n\n  // to handle details of card\n  const [showDetails, setShowDetails] = useState(false);\n  const [cardName, setCardName] = useState(\"\");\n  const [descDetails, setDescDetails] = useState(\"\");\n  const [dateDetails, setDateDetails] = useState(\"\");\n  const [teamDetail, setTeamDetails] = useState([]);\n  const [editDetails, setEditDetails] = useState(false);\n  const [cardId, setCardId] = useState(\"\");\n\n  // to get today's date iin yyyy-mm-dd format\n  var today = new Date();\n  var month,\n    day = null;\n  if (today.getMonth() < 10 || today.getDate() < 10) {\n    month = \"0\" + (today.getMonth() + 1);\n    day = \"0\" + today.getDate();\n  }\n  var date = today.getFullYear() + \"-\" + month + \"-\" + day;\n\n  useEffect(() => {\n    setIsCardAdded(false);\n    setIsCardDelete(false);\n    setIsCardEdited(false);\n    getCardData();\n  }, [isCardAdded, isCardDragged, isCardDelete, isCardEdited]);\n\n  // to get card details from firebase\n  const getCardData = () => {\n    Axios.get(\n      `https://pro-organizer-c3f1c.firebaseio.com/boardContents/${boardId}/column/${columnId}/card.json`\n    )\n      .then((res) => {\n        setCardData(res.data);\n        // if (cardData !== null) {\n        //   setShowCard(true);\n        // } else {\n        //   setShowCard(false);\n        // }\n      })\n      .catch((err) => console.log(\"Error in getCardData\" + err));\n  };\n\n  //  to handle add card modal click\n  const handleAddCardClick = (e) => {\n    //   check if all input is taken\n    if (\n      (cardTitle === \"\" || descrptn === \"\" || dueDate === \"\") &&\n      editDetails === false\n    ) {\n      document.getElementById(\"cardInputError\").innerHTML =\n        \"<strong>Note</strong>: All the fields are required!!!\";\n    } else {\n      // if user wants to edit then put request is used\n      if (editDetails) {\n        Axios.put(\n          `https://pro-organizer-c3f1c.firebaseio.com/boardContents/${boardId}/column/${columnId}/card/${cardId}.json`,\n          {\n            cardTitle: cardTitle === \"\" ? cardName : cardTitle,\n            team: team.length === 0 ? teamDetail : team,\n            descrptn: descrptn === \"\" ? descDetails : descrptn,\n            dueDate: dueDate === \"\" ? dateDetails : dueDate,\n          }\n        )\n          .then((res) => {\n            alert(\"card edited succesfully\");\n            setIsCardEdited(true);\n          })\n          .catch((err) => console.log(\"Error in editDetails\" + err));\n      }\n      //  if user wants to add a new card\n      else {\n        Axios.post(\n          `https://pro-organizer-c3f1c.firebaseio.com/boardContents/${boardId}/column/${columnId}/card.json`,\n          {\n            cardTitle: cardTitle,\n            team: team,\n            descrptn: descrptn,\n            dueDate: dueDate,\n          }\n        )\n          .then((res) => {\n            alert(\"card added succesfully\");\n            // call new card\n            // getCardData();\n            setIsCardAdded(true);\n          })\n          .catch((err) => console.log(\"Error\" + err));\n      }\n\n      setShowModal(false);\n      setEditDetails(false);\n\n      setCardTitle(\"\");\n      setTeam([]);\n      setDescrptn(\"\");\n      setDueDate(\"\");\n    }\n  };\n\n  // on click of card this function shows details\n  const onCardClick = (\n    cardName,\n    descDetails,\n    dateDetails,\n    teamDetails,\n    cardId,\n    e\n  ) => {\n    setShowDetails(true);\n\n    setCardName(cardName);\n    setDescDetails(descDetails);\n    setDateDetails(dateDetails);\n\n    setTeamDetails(teamDetails);\n    setCardId(cardId);\n  };\n  // handles edit button click\n  const handleEdit = (e) => {\n    setShowDetails(false);\n    setShowModal(true);\n    setEditDetails(true);\n  };\n  // handles archive on card archive click\n  const handleArchive = (e) => {\n    Axios.delete(\n      `https://pro-organizer-c3f1c.firebaseio.com/boardContents/${boardId}/column/${columnId}/card/${cardId}.json`\n    )\n      .then((res) => {\n        alert(\"card archived succesfully\");\n        setIsCardDelete(true);\n      })\n      .catch((err) => console.log(\"Error\" + err));\n\n    setShowDetails(false);\n  };\n\n  const onSelectChange = (e) => {\n    const values = [...e.target.selectedOptions].map((opt) => opt.value);\n    setTeam(values);\n  };\n\n  const drag = (itemData, dragCardId, e) => {\n    var draggedCard = {\n      columnId: columnId,\n      dragCardId: dragCardId,\n      cardData: itemData,\n    };\n\n    e.dataTransfer.setData(\"text/plain\", JSON.stringify(draggedCard));\n    console.log(e.dataTransfer.getData(\"text/plain\"));\n  };\n\n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <>\n      {/* to show card html part starts here */}\n      <div className={styles.showCardContainer}>\n        {cardData &&\n          Object.entries(cardData).map((item) => (\n            <div key={item[0]}>\n              <div\n                className={styles.cardHeader}\n                id={item[0]}\n                value={item[1].cardTitle}\n                onClick={(e) =>\n                  onCardClick(\n                    item[1].cardTitle,\n                    item[1].descrptn,\n                    item[1].dueDate,\n                    item[1].team,\n                    item[0],\n                    e\n                  )\n                }\n                draggable=\"true\"\n                onDragStart={(e) => drag(item[1], item[0], e)}\n              >\n                {item[1].cardTitle}\n                <div className={styles.cardContent}>\n                  <div>\n                    <i className=\"fas fa-list\"></i>\n                  </div>\n                  <div>\n                    {item[1].team !== undefined ? (\n                      item[1].team.map((i) => (\n                        <span className={styles.cardMembers} key={i}>\n                          {i.charAt(0)}\n                        </span>\n                      ))\n                    ) : (\n                      <div></div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n      </div>\n\n      {/*to show card html part End here  */}\n      <button\n        id=\"addCardBox\"\n        className={styles.addCardBox}\n        onClick={() => setShowModal(true)}\n        onDragOver={allowDrop}\n      >\n        Add a card\n      </button>\n      <br />\n      {showModal && (\n        <Modal flag={\"addCard\"}>\n          <button\n            type=\"button\"\n            className=\"close\"\n            data-dismiss=\"modal\"\n            style={{ width: \"5%\", height: \"10%\" }}\n            onClick={() => {\n              setShowModal(false);\n              setEditDetails(false);\n            }}\n          >\n            &times;\n          </button>\n          <h5 className={modalStyles.modalTitle}>Add Card</h5>\n          <br />\n          <div className={modalStyles.cardFormContainer}>\n            <label htmlFor=\"title\" className={modalStyles.cardInputTitle}>\n              Enter a title for your task:\n            </label>\n            <input\n              id=\"title\"\n              type=\"text\"\n              className={modalStyles.cardInputBox}\n              defaultValue={editDetails ? cardName : \"\"}\n              placeholder=\"e.g. Add a new icon\"\n              onChange={(e) => setCardTitle(e.target.value)}\n            ></input>\n            <br />\n\n            <label htmlFor=\"members\" className={modalStyles.cardInputTitle}>\n              Choose members for this task(select multiple,if needed)\n            </label>\n            <select\n              id=\"membersList\"\n              name=\"membersList\"\n              defaultValue={editDetails ? teamDetail : \"\"}\n              className={modalStyles.cardInputBox}\n              multiple\n              onChange={onSelectChange}\n            >\n              {memberArr.map((item) => (\n                <option value={item} key={item}>\n                  {item}\n                </option>\n              ))}\n            </select>\n            <br />\n\n            <label htmlFor=\"description\" className={modalStyles.cardInputTitle}>\n              Add the description for your task\n            </label>\n            <input\n              id=\"description\"\n              type=\"text\"\n              className={modalStyles.cardInputBox}\n              defaultValue={editDetails ? descDetails : \"\"}\n              placeholder=\"Add your description here\"\n              onChange={(e) => setDescrptn(e.target.value)}\n            ></input>\n            <br />\n\n            <label htmlFor=\"due_date\" className={modalStyles.cardInputTitle}>\n              Select the due-date for this task\n            </label>\n            <input\n              id=\"due_date\"\n              type=\"date\"\n              min={date}\n              className={modalStyles.cardInputBox}\n              defaultValue={editDetails ? dateDetails : \"\"}\n              onChange={(e) => setDueDate(e.target.value)}\n            ></input>\n            <br />\n\n            <button\n              id=\"CreateCard\"\n              className=\"btn btn-primary\"\n              onClick={handleAddCardClick}\n            >\n              Add Card\n            </button>\n            <br />\n          </div>\n          <div id=\"cardInputError\" style={{ color: \"red\" }}></div>\n        </Modal>\n      )}\n      <br />\n      {showDetails && (\n        <Modal>\n          <div>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              style={{ width: \"5%\" }}\n              onClick={() => setShowDetails(false)}\n            >\n              &times;\n            </button>\n            <div className={styles.cardDetailContainer}>\n              <div className={styles.cardDetailHeader}>\n                <h3>{cardName}</h3>\n                <div className={styles.editAndArcbtn}>\n                  <button\n                    type=\"button\"\n                    id=\"editBtn\"\n                    className=\"btn btn-primary\"\n                    onClick={handleEdit}\n                  >\n                    Edit\n                  </button>\n                  <button\n                    type=\"button\"\n                    id=\"archiveBtn\"\n                    style={{ marginLeft: \"10px\" }}\n                    className=\"btn btn-danger\"\n                    onClick={handleArchive}\n                  >\n                    Archive\n                  </button>\n                </div>\n              </div>\n              <div>in {boardTitle}</div>\n              <br />\n              <h5>Description</h5>\n              <div>{descDetails}</div>\n              <br />\n              <h5>Members</h5>\n              <div>\n                {teamDetail !== undefined &&\n                  teamDetail.map((i) => (\n                    <span className={styles.cardMembers} key={i}>\n                      {i.charAt(0)}\n                    </span>\n                  ))}\n              </div>\n              <br />\n              <h5>Due Date</h5>\n              <div>{dateDetails}</div>\n            </div>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}