{"ast":null,"code":"import _classCallCheck from\"/home/wws/Desktop/pro-organiser-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/wws/Desktop/pro-organiser-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/wws/Desktop/pro-organiser-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/wws/Desktop/pro-organiser-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import style from'./CreateBoard.module.css';var CreateBoard=/*#__PURE__*/function(_Component){_inherits(CreateBoard,_Component);var _super=_createSuper(CreateBoard);function CreateBoard(props){var _this;_classCallCheck(this,CreateBoard);_this=_super.call(this,props);_this.state={formComplete:false,formIncompleteError:false};_this.addBoardToDBHandler=function(event){event.preventDefault();if(_this.NameOfboard.current.value.length===0||_this.TeamMember.current.value.length===0||_this.TypeOfBoard.current.value.length===0){_this.setState({formComplete:false,formIncompleteError:true});}else{// let selectedStock = {...this.state.selectedStock}\n// selectedStock.closingPrice = this.BuyingPrice.current.value;\n// selectedStock.numberOfShares = this.NoOfShares.current.value;\n// selectedStock.date = this.BuyingDate.current.value;\n// Axios.post('https://financial-portfolio-trac-178fd.firebaseio.com/myStocks.json', selectedStock)\n//     .then(response => {\n//         // console.log(response);\n//         let allStocks = {...this.state.allStocks};\n//         let newAllStocks = [];\n//         for(let value in allStocks){\n//             if(allStocks[value].symbol !== this.state.selectedStock.symbol){\n//                 newAllStocks.push(allStocks[value]);\n//             }\n//         }\n//         let newMystocks = {};\n//         Axios.get('https://financial-portfolio-trac-178fd.firebaseio.com/myStocks.json')\n//             .then(response => {\n//                 newMystocks = response.data;\n//            Axios.put('https://financial-portfolio-trac-178fd.firebaseio.com/allStocks.json', newAllStocks)\n//                 .then(response => {\n//                     this.setState({\n//                         selectedStock : {},\n//                         showModel : false,\n//                         allStocks: newAllStocks,\n//                         myStocks : newMystocks\n//                     })\n//             }).catch(error => {console.log(error)});\n//         }).catch(error => {console.log(error)});\n//     }).catch(error => {console.log(error)});\n}};_this.NameOfboard=React.createRef();_this.TeamMember=React.createRef();_this.TypeOfBoard=React.createRef();return _this;}_createClass(CreateBoard,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:style.CreateMain},/*#__PURE__*/React.createElement(\"div\",{className:style.CreateTitle},/*#__PURE__*/React.createElement(\"span\",null,\"Create a Board\")),/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.addBoardToDBHandler},this.state.formIncompleteError?/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},\"Kindly complete the form before adding the Board\"):null,/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"div\",{className:style.Createlable},\"Enter a name of your board:\"),/*#__PURE__*/React.createElement(\"input\",{id:\"name\",type:\"text\",name:\"name\",placeholder:\"eg Agile Sprint Board\",ref:this.NameOfboard})),/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"div\",{className:style.Createlable},\"Add your team members:\"),/*#__PURE__*/React.createElement(\"input\",{id:\"team\",type:\"text\",name:\"team\",placeholder:\"Add your team (separated by commas)\",ref:this.TeamMember})),/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"div\",{className:style.Createlable},\"Enter the type of your board:\"),/*#__PURE__*/React.createElement(\"input\",{id:\"type\",type:\"text\",name:\"type\",placeholder:\"eg Design UX\",ref:this.TypeOfBoard})),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",id:\"CreateBoard\",className:style.CreateButton,disabled:this.state.formComplete},\"create\")));}}]);return CreateBoard;}(Component);export default CreateBoard;","map":{"version":3,"sources":["/home/wws/Desktop/pro-organiser-application/src/pages/CreateBoard/CreateBoard.js"],"names":["React","Component","style","CreateBoard","props","state","formComplete","formIncompleteError","addBoardToDBHandler","event","preventDefault","NameOfboard","current","value","length","TeamMember","TypeOfBoard","setState","createRef","CreateMain","CreateTitle","color","Createlable","CreateButton"],"mappings":"wnBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,C,GAGMC,CAAAA,W,0GACF,qBAAYC,KAAZ,CAAkB,6CACd,uBAAMA,KAAN,EADc,MAOlBC,KAPkB,CAOV,CAEJC,YAAY,CAAG,KAFX,CAGJC,mBAAmB,CAAG,KAHlB,CAPU,OAalBC,mBAbkB,CAaI,SAACC,KAAD,CAAW,CAC7BA,KAAK,CAACC,cAAN,GACA,GAAG,MAAKC,WAAL,CAAiBC,OAAjB,CAAyBC,KAAzB,CAA+BC,MAA/B,GAA0C,CAA1C,EAA+C,MAAKC,UAAL,CAAgBH,OAAhB,CAAwBC,KAAxB,CAA8BC,MAA9B,GAAyC,CAAxF,EAA6F,MAAKE,WAAL,CAAiBJ,OAAjB,CAAyBC,KAAzB,CAA+BC,MAA/B,GAA0C,CAA1I,CAA4I,CACxI,MAAKG,QAAL,CAAc,CACVX,YAAY,CAAG,KADL,CAEVC,mBAAmB,CAAG,IAFZ,CAAd,EAIH,CALD,IAKK,CACD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CACJ,CAtDa,CAEd,MAAKI,WAAL,CAAmBX,KAAK,CAACkB,SAAN,EAAnB,CACA,MAAKH,UAAL,CAAkBf,KAAK,CAACkB,SAAN,EAAlB,CACA,MAAKF,WAAL,CAAmBhB,KAAK,CAACkB,SAAN,EAAnB,CAJc,aAKjB,C,+DAoDQ,CACT,mBACI,2BAAK,SAAS,CAAEhB,KAAK,CAACiB,UAAtB,eACI,2BAAK,SAAS,CAAEjB,KAAK,CAACkB,WAAtB,eACA,iDADA,CADJ,cAII,4BAAM,QAAQ,CAAE,KAAKZ,mBAArB,EACC,KAAKH,KAAL,CAAWE,mBAAX,cAAiC,yBAAG,KAAK,CAAE,CAACc,KAAK,CAAG,KAAT,CAAV,qDAAjC,CAAmH,IADpH,cAEA,8CACI,2BAAK,SAAS,CAAEnB,KAAK,CAACoB,WAAtB,gCADJ,cAEI,6BAAO,EAAE,CAAC,MAAV,CAAiB,IAAI,CAAC,MAAtB,CAA6B,IAAI,CAAC,MAAlC,CAAyC,WAAW,CAAC,uBAArD,CAA6E,GAAG,CAAE,KAAKX,WAAvF,EAFJ,CAFA,cAMA,8CACI,2BAAK,SAAS,CAAET,KAAK,CAACoB,WAAtB,2BADJ,cAEI,6BAAO,EAAE,CAAC,MAAV,CAAiB,IAAI,CAAC,MAAtB,CAA6B,IAAI,CAAC,MAAlC,CAAyC,WAAW,CAAC,qCAArD,CAA2F,GAAG,CAAE,KAAKP,UAArG,EAFJ,CANA,cAUA,8CACI,2BAAK,SAAS,CAAEb,KAAK,CAACoB,WAAtB,kCADJ,cAEI,6BAAO,EAAE,CAAC,MAAV,CAAiB,IAAI,CAAC,MAAtB,CAA6B,IAAI,CAAC,MAAlC,CAAyC,WAAW,CAAC,cAArD,CAAoE,GAAG,CAAE,KAAKN,WAA9E,EAFJ,CAVA,cAcA,8BAAQ,IAAI,CAAC,QAAb,CAAsB,EAAE,CAAC,aAAzB,CAAuC,SAAS,CAAEd,KAAK,CAACqB,YAAxD,CAAsE,QAAQ,CAAE,KAAKlB,KAAL,CAAWC,YAA3F,WAdA,CAJJ,CADJ,CAuBH,C,yBAlFyBL,S,EAqF1B,cAAeE,CAAAA,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport style from './CreateBoard.module.css';\n\n\nclass CreateBoard extends Component {\n    constructor(props){\n        super(props);\n        this.NameOfboard = React.createRef();\n        this.TeamMember = React.createRef();\n        this.TypeOfBoard = React.createRef();\n    }\n    \n    state = {\n    \n        formComplete : false,\n        formIncompleteError : false\n    }\n\n    addBoardToDBHandler = (event) => {\n        event.preventDefault();\n        if(this.NameOfboard.current.value.length === 0 || this.TeamMember.current.value.length === 0 || this.TypeOfBoard.current.value.length === 0){\n            this.setState({\n                formComplete : false,\n                formIncompleteError : true\n            })\n        }else{\n            // let selectedStock = {...this.state.selectedStock}\n            // selectedStock.closingPrice = this.BuyingPrice.current.value;\n            // selectedStock.numberOfShares = this.NoOfShares.current.value;\n            // selectedStock.date = this.BuyingDate.current.value;\n            \n            // Axios.post('https://financial-portfolio-trac-178fd.firebaseio.com/myStocks.json', selectedStock)\n            //     .then(response => {\n            //         // console.log(response);\n            //         let allStocks = {...this.state.allStocks};\n            //         let newAllStocks = [];\n            //         for(let value in allStocks){\n            //             if(allStocks[value].symbol !== this.state.selectedStock.symbol){\n            //                 newAllStocks.push(allStocks[value]);\n            //             }\n            //         }\n\n            //         let newMystocks = {};\n\n            //         Axios.get('https://financial-portfolio-trac-178fd.firebaseio.com/myStocks.json')\n            //             .then(response => {\n            //                 newMystocks = response.data;\n            //            Axios.put('https://financial-portfolio-trac-178fd.firebaseio.com/allStocks.json', newAllStocks)\n            //                 .then(response => {\n            //                     this.setState({\n            //                         selectedStock : {},\n            //                         showModel : false,\n            //                         allStocks: newAllStocks,\n            //                         myStocks : newMystocks\n            //                     })\n            //             }).catch(error => {console.log(error)});\n            //         }).catch(error => {console.log(error)});\n            //     }).catch(error => {console.log(error)});\n            }\n        }\n\n\n    render() {\n    return (\n        <div className={style.CreateMain}>\n            <div className={style.CreateTitle}>\n            <span>Create a Board</span>\n            </div>\n            <form onSubmit={this.addBoardToDBHandler}>\n            {this.state.formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding the Board</p> : null}\n            <label>\n                <div className={style.Createlable}>Enter a name of your board:</div>\n                <input id=\"name\" type=\"text\" name=\"name\" placeholder=\"eg Agile Sprint Board\" ref={this.NameOfboard} />\n            </label>\n            <label>\n                <div className={style.Createlable}>Add your team members:</div>\n                <input id=\"team\" type=\"text\" name=\"team\" placeholder=\"Add your team (separated by commas)\" ref={this.TeamMember} />\n            </label>\n            <label>\n                <div className={style.Createlable}>Enter the type of your board:</div>\n                <input id=\"type\" type=\"text\" name=\"type\" placeholder=\"eg Design UX\" ref={this.TypeOfBoard} />\n            </label>\n            <button type=\"submit\" id=\"CreateBoard\" className={style.CreateButton} disabled={this.state.formComplete}>create</button>\n            </form>\n        </div>\n    );\n}\n}\n\nexport default CreateBoard;"]},"metadata":{},"sourceType":"module"}