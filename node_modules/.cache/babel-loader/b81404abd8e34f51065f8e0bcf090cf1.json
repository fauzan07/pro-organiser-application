{"ast":null,"code":"var _jsxFileName = \"/home/wws/Desktop/pro-organiser-application/src/components/addColumn/AddColumn.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./AddColumn.module.css\";\nimport Modal from './../../common/Modal/Modal';\nimport Axios from \"axios\";\n\nfunction AddColumn(props) {\n  const [showModal, setShowModal] = useState(false);\n  const [columnName, setColumnName] = useState(\"\");\n  useEffect(() => {\n    handleClick();\n  }, [showModal]);\n\n  const handleClick = () => {\n    setShowModal(true);\n  };\n\n  const handleAddColumnClick = e => {\n    if (columnName === \"\") {\n      document.getElementById(\"inputError\").innerHTML = \"Please fill the column name field\";\n    } else {\n      // add column name in firebase\n      Axios.post(`https://pro-organizer-c3f1c.firebaseio.com/boardContents/${props.boardId}/column.json`, {\n        name: columnName\n      }).then(res => {\n        alert(\"column added succesfully\"); // props.getColumnData();\n\n        props.setShowColumn(true);\n      }).catch(err => console.log(err));\n      setShowModal(false);\n    }\n  }; //console.log(showModal);\n  // return (\n  //   <>\n  //     <div className={styles.addColumnBox} id=\"addColumnBox\">\n  //       <div>Add a Column</div>\n  //     </div>\n  //     <br />\n  //     {showModal && (\n  //       <Modal flag={\"addColumn\"}>\n  //         <button\n  //           type=\"button\"\n  //           className=\"close\"\n  //           data-dismiss=\"modal\"\n  //           style={{ width: \"5%\" }}\n  //           onClick={() => setShowModal(false)}\n  //         >\n  //           &times;\n  //         </button>\n  //         <h5 >Add column</h5>\n  //         <br />\n  //         <div >\n  //           <label htmlFor=\"column_name\">Enter a column name:</label>\n  //           <input\n  //             id=\"column_name\"\n  //             type=\"text\"\n  //             value={columnName}\n  //             // className={modalStyles.inputBox}\n  //             onChange={(e) => {\n  //               e.preventDefault();\n  //               setColumnName(e.target.value);\n  //             }}\n  //           ></input>\n  //           <br />\n  //           <br />\n  //         </div>\n  //         <br />\n  //         <button\n  //           className=\"btn btn-primary\"\n  //           id=\"CreateColumn\"\n  //           onClick={handleAddColumnClick}\n  //         >\n  //           Add Column\n  //         </button>\n  //         <br />\n  //         <br />\n  //         <div id=\"inputError\"></div>\n  //       </Modal>\n  //     )}\n  //   </>\n  // );\n\n\n  const modalCloseHandler = () => {\n    setShowModal(false);\n  };\n\n  const modalContent = showModal ? /*#__PURE__*/React.createElement(React.Fragment, null, this.state.formIncompleteError ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 41\n    }\n  }, \"Kindly complete the form before adding this stock for tracking\") : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"AddStockForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"Lable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 35\n    }\n  }, \"Company Name:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"cname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 79\n    }\n  }, this.state.selectedStock.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"Lable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 35\n    }\n  }, \"No. of Shares:\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"noShares\",\n    type: \"number\",\n    min: \"1\",\n    placeholder: \"No of Shares\",\n    ref: this.NoOfShares,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 80\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"Lable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 35\n    }\n  }, \"Buy Price:\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"buyPrice\",\n    type: \"number\",\n    min: \"1\",\n    placeholder: \"buying Price\",\n    ref: this.BuyingPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 76\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"FormInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"Lable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 35\n    }\n  }, \"Buy Date:\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"buyDate\",\n    type: \"date\",\n    onChange: this.dateHandler,\n    ref: this.BuyingDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 75\n    }\n  })), this.state.dateError ? /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 32\n    }\n  }, this.state.dateErrorMsg) : null), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"AddButton\",\n    disabled: this.state.formComplete,\n    onClick: this.addStockToDBHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Add\")) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, showModal ? /*#__PURE__*/React.createElement(Modal, {\n    content: modalContent,\n    close: this.modalCloseHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.AddColumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"Add a Column\")));\n}\n\nexport default AddColumn;","map":{"version":3,"sources":["/home/wws/Desktop/pro-organiser-application/src/components/addColumn/AddColumn.js"],"names":["React","useState","useEffect","styles","Modal","Axios","AddColumn","props","showModal","setShowModal","columnName","setColumnName","handleClick","handleAddColumnClick","e","document","getElementById","innerHTML","post","boardId","name","then","res","alert","setShowColumn","catch","err","console","log","modalCloseHandler","modalContent","state","formIncompleteError","color","selectedStock","NoOfShares","BuyingPrice","dateHandler","BuyingDate","dateError","dateErrorMsg","formComplete","addStockToDBHandler"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styles from \"./AddColumn.module.css\";\nimport Modal from './../../common/Modal/Modal';\nimport Axios from \"axios\";\n\nfunction AddColumn(props) {\n  const [showModal, setShowModal] = useState(false);\n  const [columnName, setColumnName] = useState(\"\");\n  useEffect(() => {\n    handleClick();\n  }, [showModal]);\n\n  const handleClick = () => {\n\n      setShowModal(true);\n    \n  };\n\n  const handleAddColumnClick = (e) => {\n    if (columnName === \"\") {\n      document.getElementById(\"inputError\").innerHTML =\n        \"Please fill the column name field\";\n    } else {\n      // add column name in firebase\n      Axios.post(\n        `https://pro-organizer-c3f1c.firebaseio.com/boardContents/${props.boardId}/column.json`,\n        {\n          name: columnName,\n        }\n      )\n        .then((res) => {\n          alert(\"column added succesfully\");\n          // props.getColumnData();\n          props.setShowColumn(true);\n        })\n        .catch((err) => console.log(err));\n\n      setShowModal(false);\n    }\n  };\n  //console.log(showModal);\n  // return (\n  //   <>\n  //     <div className={styles.addColumnBox} id=\"addColumnBox\">\n  //       <div>Add a Column</div>\n  //     </div>\n  //     <br />\n  //     {showModal && (\n  //       <Modal flag={\"addColumn\"}>\n  //         <button\n  //           type=\"button\"\n  //           className=\"close\"\n  //           data-dismiss=\"modal\"\n  //           style={{ width: \"5%\" }}\n  //           onClick={() => setShowModal(false)}\n  //         >\n  //           &times;\n  //         </button>\n  //         <h5 >Add column</h5>\n  //         <br />\n  //         <div >\n  //           <label htmlFor=\"column_name\">Enter a column name:</label>\n  //           <input\n  //             id=\"column_name\"\n  //             type=\"text\"\n  //             value={columnName}\n  //             // className={modalStyles.inputBox}\n  //             onChange={(e) => {\n  //               e.preventDefault();\n  //               setColumnName(e.target.value);\n  //             }}\n  //           ></input>\n  //           <br />\n  //           <br />\n  //         </div>\n  //         <br />\n  //         <button\n  //           className=\"btn btn-primary\"\n  //           id=\"CreateColumn\"\n  //           onClick={handleAddColumnClick}\n  //         >\n  //           Add Column\n  //         </button>\n  //         <br />\n  //         <br />\n  //         <div id=\"inputError\"></div>\n  //       </Modal>\n  //     )}\n  //   </>\n  // );\n  \n\n  const  modalCloseHandler = () => {setShowModal(false)};\n\n  const modalContent = showModal ? \n\n  (\n      <>\n      {this.state.formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding this stock for tracking</p> : null}\n      <div className=\"AddStockForm\">\n       <div className=\"FormInput\"><span className=\"Lable\">Company Name:</span><span className=\"cname\">{this.state.selectedStock.name}</span></div>\n       <div className=\"FormInput\"><span className=\"Lable\">No. of Shares:</span><input id=\"noShares\" type=\"number\" min=\"1\" placeholder=\"No of Shares\" ref={this.NoOfShares}/></div>\n       <div className=\"FormInput\"><span className=\"Lable\">Buy Price:</span><input id=\"buyPrice\" type=\"number\" min=\"1\" placeholder=\"buying Price\" ref={this.BuyingPrice}/></div>\n       <div className=\"FormInput\"><span className=\"Lable\">Buy Date:</span><input id=\"buyDate\" type=\"date\" onChange={this.dateHandler} ref={this.BuyingDate}/></div>\n       {this.state.dateError ? <span style={{color : 'red'}}>{this.state.dateErrorMsg}</span> : null}\n      </div>\n      <button className=\"AddButton\" disabled={this.state.formComplete} onClick={this.addStockToDBHandler}>Add</button>\n      </>\n  )\n  :null;\n\n  return (\n    <div>\n        {\n            showModal ?\n            <Modal  \n                content = {modalContent}\n                close = {this.modalCloseHandler}/> :\n                null\n        \n        }\n        <div className={styles.AddColumn}>\n          <span onClick = {handleClick}>Add a Column</span>\n          </div>\n    </div>\n)\n}\n\nexport default AddColumn;\n"]},"metadata":{},"sourceType":"module"}