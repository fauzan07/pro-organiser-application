{"ast":null,"code":"import _objectSpread from\"/home/wws/Desktop/pro-organiser-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/wws/Desktop/pro-organiser-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/wws/Desktop/pro-organiser-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/wws/Desktop/pro-organiser-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/wws/Desktop/pro-organiser-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Axios from'axios';import style from'./CreateBoard.module.css';var CreateBoard=/*#__PURE__*/function(_Component){_inherits(CreateBoard,_Component);var _super=_createSuper(CreateBoard);function CreateBoard(props){var _this;_classCallCheck(this,CreateBoard);_this=_super.call(this,props);_this.state={formComplete:false,formIncompleteError:false,selectedBoard:{}};_this.addBoardToDBHandler=function(event){event.preventDefault();if(_this.NameOfboard.current.value.length===0||_this.TeamMember.current.value.length===0||_this.TypeOfBoard.current.value.length===0){_this.setState({formComplete:false,formIncompleteError:true});}else{var selectedBoard=_objectSpread({},_this.state.selectedBoard);selectedBoard.boardName=_this.NameOfboard.current.value;selectedBoard.members=_this.TeamMember.current.value;selectedBoard.boardType=_this.TypeOfBoard.current.value;Axios.post('https://pro-organiser-app.firebaseio.com/boardContents.json',selectedBoard).then(function(response){alert(\"Board added succesfully\");_this.props.history.push('/');}).catch(function(error){console.log(error);});}};_this.NameOfboard=React.createRef();_this.TeamMember=React.createRef();_this.TypeOfBoard=React.createRef();return _this;}_createClass(CreateBoard,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;Axios.get('https://pro-organiser-app.firebaseio.com/boardContents.json').then(function(response){console.log(response);_this2.setState({boardContents:response.data});}).catch(function(error){console.log(error);});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:style.CreateMain},this.state.formIncompleteError?/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},\"Kindly complete the form before adding the Board\"):null,/*#__PURE__*/React.createElement(\"div\",{className:style.CreateTitle},/*#__PURE__*/React.createElement(\"span\",null,\"Create a Board\")),/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.addBoardToDBHandler},/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"div\",{className:style.Createlable},\"Enter a name of your board:\"),/*#__PURE__*/React.createElement(\"input\",{id:\"name\",type:\"text\",name:\"name\",placeholder:\"eg Agile Sprint Board\",ref:this.NameOfboard})),/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"div\",{className:style.Createlable},\"Add your team members:\"),/*#__PURE__*/React.createElement(\"input\",{id:\"team\",type:\"text\",name:\"team\",placeholder:\"Add your team (separated by commas)\",ref:this.TeamMember})),/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"div\",{className:style.Createlable},\"Enter the type of your board:\"),/*#__PURE__*/React.createElement(\"input\",{id:\"type\",type:\"text\",name:\"type\",placeholder:\"eg Design UX\",ref:this.TypeOfBoard})),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",id:\"CreateBoard\",className:style.CreateButton,disabled:this.state.formComplete},\"create\")));}}]);return CreateBoard;}(Component);export default CreateBoard;","map":{"version":3,"sources":["/home/wws/Desktop/pro-organiser-application/src/pages/CreateBoard/CreateBoard.js"],"names":["React","Component","Axios","style","CreateBoard","props","state","formComplete","formIncompleteError","selectedBoard","addBoardToDBHandler","event","preventDefault","NameOfboard","current","value","length","TeamMember","TypeOfBoard","setState","boardName","members","boardType","post","then","response","alert","history","push","catch","error","console","log","createRef","get","boardContents","data","CreateMain","color","CreateTitle","Createlable","CreateButton"],"mappings":"yxBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,C,GAGMC,CAAAA,W,0GACF,qBAAYC,KAAZ,CAAkB,6CACd,uBAAMA,KAAN,EADc,MAOlBC,KAPkB,CAOV,CAEJC,YAAY,CAAG,KAFX,CAGJC,mBAAmB,CAAG,KAHlB,CAIJC,aAAa,CAAG,EAJZ,CAPU,OA0BlBC,mBA1BkB,CA0BI,SAACC,KAAD,CAAW,CAC7BA,KAAK,CAACC,cAAN,GACA,GAAG,MAAKC,WAAL,CAAiBC,OAAjB,CAAyBC,KAAzB,CAA+BC,MAA/B,GAA0C,CAA1C,EAA+C,MAAKC,UAAL,CAAgBH,OAAhB,CAAwBC,KAAxB,CAA8BC,MAA9B,GAAyC,CAAxF,EAA6F,MAAKE,WAAL,CAAiBJ,OAAjB,CAAyBC,KAAzB,CAA+BC,MAA/B,GAA0C,CAA1I,CAA4I,CACxI,MAAKG,QAAL,CAAc,CACVZ,YAAY,CAAG,KADL,CAEVC,mBAAmB,CAAG,IAFZ,CAAd,EAIH,CALD,IAKK,CACD,GAAIC,CAAAA,aAAa,kBAAO,MAAKH,KAAL,CAAWG,aAAlB,CAAjB,CACAA,aAAa,CAACW,SAAd,CAA0B,MAAKP,WAAL,CAAiBC,OAAjB,CAAyBC,KAAnD,CACAN,aAAa,CAACY,OAAd,CAAwB,MAAKJ,UAAL,CAAgBH,OAAhB,CAAwBC,KAAhD,CACAN,aAAa,CAACa,SAAd,CAA0B,MAAKJ,WAAL,CAAiBJ,OAAjB,CAAyBC,KAAnD,CAEAb,KAAK,CAACqB,IAAN,CAAW,6DAAX,CAA0Ed,aAA1E,EACKe,IADL,CACU,SAAAC,QAAQ,CAAI,CACdC,KAAK,CAAC,yBAAD,CAAL,CACe,MAAKrB,KAAL,CAAWsB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,EAEV,CALb,EAKeC,KALf,CAKqB,SAAAC,KAAK,CAAI,CAACC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,CALlD,EAMS,CACJ,CA9CK,CAEd,MAAKjB,WAAL,CAAmBb,KAAK,CAACiC,SAAN,EAAnB,CACA,MAAKhB,UAAL,CAAkBjB,KAAK,CAACiC,SAAN,EAAlB,CACA,MAAKf,WAAL,CAAmBlB,KAAK,CAACiC,SAAN,EAAnB,CAJc,aAKjB,C,qFAUmB,iBAChB/B,KAAK,CAACgC,GAAN,CAAU,6DAAV,EACKV,IADL,CACU,SAAAC,QAAQ,CAAI,CACdM,OAAO,CAACC,GAAR,CAAYP,QAAZ,EACA,MAAI,CAACN,QAAL,CAAc,CACVgB,aAAa,CAAEV,QAAQ,CAACW,IADd,CAAd,EAGH,CANL,EAOKP,KAPL,CAOW,SAAAC,KAAK,CAAI,CAACC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,CAPxC,EAQH,C,uCAwBQ,CACT,mBACI,2BAAK,SAAS,CAAE3B,KAAK,CAACkC,UAAtB,EACK,KAAK/B,KAAL,CAAWE,mBAAX,cAAiC,yBAAG,KAAK,CAAE,CAAC8B,KAAK,CAAG,KAAT,CAAV,qDAAjC,CAAmH,IADxH,cAEI,2BAAK,SAAS,CAAEnC,KAAK,CAACoC,WAAtB,eACA,iDADA,CAFJ,cAMI,4BAAM,QAAQ,CAAE,KAAK7B,mBAArB,eACA,8CACI,2BAAK,SAAS,CAAEP,KAAK,CAACqC,WAAtB,gCADJ,cAEI,6BAAO,EAAE,CAAC,MAAV,CAAiB,IAAI,CAAC,MAAtB,CAA6B,IAAI,CAAC,MAAlC,CAAyC,WAAW,CAAC,uBAArD,CAA6E,GAAG,CAAE,KAAK3B,WAAvF,EAFJ,CADA,cAKA,8CACI,2BAAK,SAAS,CAAEV,KAAK,CAACqC,WAAtB,2BADJ,cAEI,6BAAO,EAAE,CAAC,MAAV,CAAiB,IAAI,CAAC,MAAtB,CAA6B,IAAI,CAAC,MAAlC,CAAyC,WAAW,CAAC,qCAArD,CAA2F,GAAG,CAAE,KAAKvB,UAArG,EAFJ,CALA,cASA,8CACI,2BAAK,SAAS,CAAEd,KAAK,CAACqC,WAAtB,kCADJ,cAEI,6BAAO,EAAE,CAAC,MAAV,CAAiB,IAAI,CAAC,MAAtB,CAA6B,IAAI,CAAC,MAAlC,CAAyC,WAAW,CAAC,cAArD,CAAoE,GAAG,CAAE,KAAKtB,WAA9E,EAFJ,CATA,cAaA,8BAAQ,IAAI,CAAC,QAAb,CAAsB,EAAE,CAAC,aAAzB,CAAuC,SAAS,CAAEf,KAAK,CAACsC,YAAxD,CAAsE,QAAQ,CAAE,KAAKnC,KAAL,CAAWC,YAA3F,WAbA,CANJ,CADJ,CAwBH,C,yBA1EyBN,S,EA6E1B,cAAeG,CAAAA,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport style from './CreateBoard.module.css';\n\n\nclass CreateBoard extends Component {\n    constructor(props){\n        super(props);\n        this.NameOfboard = React.createRef();\n        this.TeamMember = React.createRef();\n        this.TypeOfBoard = React.createRef();\n    }\n    \n    state = {\n    \n        formComplete : false,\n        formIncompleteError : false,\n        selectedBoard : {}\n    }\n\n\n    componentDidMount() {\n        Axios.get('https://pro-organiser-app.firebaseio.com/boardContents.json')\n            .then(response => {\n                console.log(response);\n                this.setState({\n                    boardContents: response.data\n                })\n            })\n            .catch(error => {console.log(error)});\n    }\n\n    addBoardToDBHandler = (event) => {\n        event.preventDefault();\n        if(this.NameOfboard.current.value.length === 0 || this.TeamMember.current.value.length === 0 || this.TypeOfBoard.current.value.length === 0){\n            this.setState({\n                formComplete : false,\n                formIncompleteError : true\n            })\n        }else{\n            let selectedBoard = {...this.state.selectedBoard}\n            selectedBoard.boardName = this.NameOfboard.current.value;\n            selectedBoard.members = this.TeamMember.current.value;\n            selectedBoard.boardType = this.TypeOfBoard.current.value;\n            \n            Axios.post('https://pro-organiser-app.firebaseio.com/boardContents.json', selectedBoard)\n                .then(response => {\n                    alert(\"Board added succesfully\");\n                                   this.props.history.push('/');\n                                \n                        }).catch(error => {console.log(error)});\n                    }\n                }\n\n    render() {\n    return (\n        <div className={style.CreateMain}>\n            {this.state.formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding the Board</p> : null}\n            <div className={style.CreateTitle}>\n            <span>Create a Board</span>\n            </div>\n          \n            <form onSubmit={this.addBoardToDBHandler}>\n            <label>\n                <div className={style.Createlable}>Enter a name of your board:</div>\n                <input id=\"name\" type=\"text\" name=\"name\" placeholder=\"eg Agile Sprint Board\" ref={this.NameOfboard} />\n            </label>\n            <label>\n                <div className={style.Createlable}>Add your team members:</div>\n                <input id=\"team\" type=\"text\" name=\"team\" placeholder=\"Add your team (separated by commas)\" ref={this.TeamMember} />\n            </label>\n            <label>\n                <div className={style.Createlable}>Enter the type of your board:</div>\n                <input id=\"type\" type=\"text\" name=\"type\" placeholder=\"eg Design UX\" ref={this.TypeOfBoard} />\n            </label>\n            <button type=\"submit\" id=\"CreateBoard\" className={style.CreateButton} disabled={this.state.formComplete}>create</button>\n            </form>\n        </div>\n    );\n}\n}\n\nexport default CreateBoard;\n"]},"metadata":{},"sourceType":"module"}