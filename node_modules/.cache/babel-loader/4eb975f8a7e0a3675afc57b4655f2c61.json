{"ast":null,"code":"var _jsxFileName = \"/home/wws/pro-organiser-application/src/pages/CreateBoard/CreateBoard.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport style from './CreateBoard.module.css';\nimport { AuthContext } from '../../context/Auth';\n\nclass CreateBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formComplete: false,\n      formIncompleteError: false,\n      selectedBoard: {}\n    };\n\n    this.addBoardToDBHandler = event => {\n      event.preventDefault();\n\n      if (this.NameOfboard.current.value.length === 0 || this.TeamMember.current.value.length === 0 || this.TypeOfBoard.current.value.length === 0) {\n        this.setState({\n          formComplete: false,\n          formIncompleteError: true\n        });\n      } else {\n        let selectedBoard = { ...this.state.selectedBoard\n        };\n        selectedBoard.boardName = this.NameOfboard.current.value;\n        selectedBoard.members = this.TeamMember.current.value;\n        selectedBoard.boardType = this.TypeOfBoard.current.value;\n        Axios.post('https://pro-organiser-app.firebaseio.com/boardContents.json', selectedBoard).then(response => {\n          alert(\"Board added succesfully\");\n          this.props.history.push('/');\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    this.NameOfboard = React.createRef();\n    this.TeamMember = React.createRef();\n    this.TypeOfBoard = React.createRef();\n    this.currentUser = useContext(AuthContext);\n    this.userId = currentUser.uid;\n  }\n\n  componentDidMount() {\n    Axios.get(`https://pro-organiser-app.firebaseio.com/boardContents/${userId}.json`).then(response => {\n      console.log(response);\n      this.setState({\n        boardContents: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: style.CreateMain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, this.state.formIncompleteError ? /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 47\n      }\n    }, \"Kindly complete the form before adding the Board\") : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: style.CreateTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Create a Board\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addBoardToDBHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: style.Createlable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"Enter a name of your board:\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"name\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"eg Agile Sprint Board\",\n      ref: this.NameOfboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: style.Createlable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"Add your team members:\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"team\",\n      type: \"text\",\n      name: \"team\",\n      placeholder: \"Add your team (separated by commas)\",\n      ref: this.TeamMember,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: style.Createlable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Enter the type of your board:\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"type\",\n      type: \"text\",\n      name: \"type\",\n      placeholder: \"eg Design UX\",\n      ref: this.TypeOfBoard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"CreateBoard\",\n      className: style.CreateButton,\n      disabled: this.state.formComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"create\")));\n  }\n\n}\n\nexport default CreateBoard;","map":{"version":3,"sources":["/home/wws/pro-organiser-application/src/pages/CreateBoard/CreateBoard.js"],"names":["React","Component","Axios","style","AuthContext","CreateBoard","constructor","props","state","formComplete","formIncompleteError","selectedBoard","addBoardToDBHandler","event","preventDefault","NameOfboard","current","value","length","TeamMember","TypeOfBoard","setState","boardName","members","boardType","post","then","response","alert","history","push","catch","error","console","log","createRef","currentUser","useContext","userId","uid","componentDidMount","get","boardContents","data","render","CreateMain","color","CreateTitle","Createlable","CreateButton"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\nimport style from './CreateBoard.module.css';\nimport { AuthContext } from '../../context/Auth';\n\n\nclass CreateBoard extends Component {\n    constructor(props){\n        super(props);\n        this.NameOfboard = React.createRef();\n        this.TeamMember = React.createRef();\n        this.TypeOfBoard = React.createRef();\n\n        this.currentUser = useContext(AuthContext);\n        this.userId = currentUser.uid;\n    }\n    \n    state = {\n    \n        formComplete : false,\n        formIncompleteError : false,\n        selectedBoard : {}\n    }\n\n\n    componentDidMount() {\n        Axios.get(`https://pro-organiser-app.firebaseio.com/boardContents/${userId}.json`)\n            .then(response => {\n                console.log(response);\n                this.setState({\n                    boardContents: response.data\n                })\n            })\n            .catch(error => {console.log(error)});\n    }\n\n    addBoardToDBHandler = (event) => {\n        event.preventDefault();\n        if(this.NameOfboard.current.value.length === 0 || this.TeamMember.current.value.length === 0 || this.TypeOfBoard.current.value.length === 0){\n            this.setState({\n                formComplete : false,\n                formIncompleteError : true\n            })\n        }else{\n            let selectedBoard = {...this.state.selectedBoard}\n            selectedBoard.boardName = this.NameOfboard.current.value;\n            selectedBoard.members = this.TeamMember.current.value;\n            selectedBoard.boardType = this.TypeOfBoard.current.value;\n            \n            Axios.post('https://pro-organiser-app.firebaseio.com/boardContents.json', selectedBoard)\n                .then(response => {\n                    alert(\"Board added succesfully\");\n                                   this.props.history.push('/');\n                                \n                        }).catch(error => {console.log(error)});\n                    }\n                }\n\n    render() {\n    return (\n        <div className={style.CreateMain}>\n            {this.state.formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding the Board</p> : null}\n            <div className={style.CreateTitle}>\n            <span>Create a Board</span>\n            </div>\n          \n            <form onSubmit={this.addBoardToDBHandler}>\n            <label>\n                <div className={style.Createlable}>Enter a name of your board:</div>\n                <input id=\"name\" type=\"text\" name=\"name\" placeholder=\"eg Agile Sprint Board\" ref={this.NameOfboard} />\n            </label>\n            <label>\n                <div className={style.Createlable}>Add your team members:</div>\n                <input id=\"team\" type=\"text\" name=\"team\" placeholder=\"Add your team (separated by commas)\" ref={this.TeamMember} />\n            </label>\n            <label>\n                <div className={style.Createlable}>Enter the type of your board:</div>\n                <input id=\"type\" type=\"text\" name=\"type\" placeholder=\"eg Design UX\" ref={this.TypeOfBoard} />\n            </label>\n            <button type=\"submit\" id=\"CreateBoard\" className={style.CreateButton} disabled={this.state.formComplete}>create</button>\n            </form>\n        </div>\n    );\n}\n}\n\nexport default CreateBoard;\n"]},"metadata":{},"sourceType":"module"}