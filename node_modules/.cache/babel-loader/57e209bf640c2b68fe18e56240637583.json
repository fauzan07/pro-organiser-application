{"ast":null,"code":"var _jsxFileName = \"/home/wws/pro-organiser-application/src/components/card/Card.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport style from \"./Card.module.css\";\nimport Modal from './../../common/Modal/Modal';\nimport Axios from \"axios\";\nimport { AuthContext } from '../../context/Auth';\n\nfunction Card(props) {\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [showModal, setShowModal] = useState(false);\n  const {\n    members,\n    columnId,\n    boardId,\n    boardTitle,\n    isCardDragged\n  } = props;\n  const [cardData, setCardData] = useState(\"\"); // to handle details of card\n\n  const [showDetails, setShowDetails] = useState(false);\n  const [cardName, setCardName] = useState(\"\");\n  const [descDetails, setDescDetails] = useState(\"\");\n  const [dateDetails, setDateDetails] = useState(\"\");\n  const [teamDetail, setTeamDetails] = useState([]);\n  const [editDetails, setEditDetails] = useState(false);\n  const [cardId, setCardId] = useState(\"\");\n  const [isCardAdded, setIsCardAdded] = useState(false);\n  const [isCardDelete, setIsCardDelete] = useState(false);\n  const [isCardEdited, setIsCardEdited] = useState(false);\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const [team, setTeam] = useState([]);\n  const [descrptn, setDescrptn] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false); // to split members list string into array\n\n  const memberArr = members.split(\",\");\n  const cardNames = React.useRef();\n  const teamDetails = React.useRef();\n  const descrpDetails = React.useRef();\n  const datesDetails = React.useRef();\n  const userId = currentUser.uid; // to Hide past date\n\n  var today = new Date();\n  var month,\n      day = null;\n\n  if (today.getMonth() < 10 || today.getDate() < 10) {\n    month = \"0\" + (today.getMonth() + 1);\n    day = \"0\" + today.getDate();\n  }\n\n  var date = today.getFullYear() + \"-\" + month + \"-\" + day;\n  useEffect(() => {\n    setIsCardAdded(false);\n    setIsCardDelete(false);\n    setIsCardEdited(false);\n    getCardData();\n  }, [isCardAdded, isCardDragged, isCardDelete, isCardEdited]);\n\n  const getCardData = () => {\n    Axios.get(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${boardId}/column/${columnId}/card.json`).then(response => {\n      setCardData(response.data);\n    }).catch(error => console.log(error));\n  }; //  to Add and Edit cardData in DB\n\n\n  const handleAddCardData = e => {\n    //   check if all input is taken\n    if (cardNames.current.value.length === 0 || teamDetails.current.value.length === 0 || descrpDetails.current.value.length === 0 || datesDetails.current.value.length === 0) {\n      setFormComplete(false);\n      setFormIncompleteError(true);\n    } else {\n      // if user wants to edit then put request is used\n      if (editDetails) {\n        Axios.put(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${boardId}/column/${columnId}/card/${cardId}.json`, {\n          cardTitle: cardTitle === \"\" ? cardName : cardTitle,\n          team: team.length === 0 ? teamDetail : team,\n          descrptn: descrptn === \"\" ? descDetails : descrptn,\n          dueDate: dueDate === \"\" ? dateDetails : dueDate\n        }).then(response => {\n          alert(\"card edited succesfully\");\n          setIsCardEdited(true);\n        }).catch(error => console.log(\"Error in editDetails\" + error));\n      } //  if user wants to add a new card\n      else {\n          Axios.post(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${boardId}/column/${columnId}/card.json`, {\n            cardTitle: cardTitle,\n            team: team,\n            descrptn: descrptn,\n            dueDate: dueDate\n          }).then(response => {\n            alert(\"card added succesfully\");\n            setIsCardAdded(true);\n          }).catch(error => console.log(\"Error\" + error));\n        }\n\n      setShowModal(false);\n      setEditDetails(false);\n      setCardTitle(\"\");\n      setTeam([]);\n      setDescrptn(\"\");\n      setDueDate(\"\");\n    }\n  }; // on click of card this function shows details\n\n\n  const onCardClick = (cardName, descDetails, dateDetails, teamDetails, cardId, e) => {\n    setShowDetails(true);\n    setCardName(cardName);\n    setDescDetails(descDetails);\n    setDateDetails(dateDetails);\n    setTeamDetails(teamDetails);\n    setCardId(cardId);\n  }; // handles edit button click\n\n\n  const handleEdit = e => {\n    setShowDetails(false);\n    setShowModal(true);\n    setEditDetails(true);\n  }; // handles archive on card archive click\n\n\n  const handleArchive = e => {\n    Axios.delete(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${boardId}/column/${columnId}/card/${cardId}.json`).then(response => {\n      alert(\"card archived succesfully\");\n      setIsCardDelete(true);\n    }).catch(error => console.log(\"Error\" + error));\n    setShowDetails(false);\n  }; //To display multiple team member selected\n\n\n  const onSelectChange = e => {\n    const values = [...e.target.selectedOptions].map(opt => opt.value);\n    setTeam(values);\n  }; //to drag card\n\n\n  const drag = (itemData, dragCardId, e) => {\n    var draggedCard = {\n      columnId: columnId,\n      dragCardId: dragCardId,\n      cardData: itemData\n    };\n    e.dataTransfer.setData(\"text/plain\", JSON.stringify(draggedCard));\n    console.log(e.dataTransfer.getData(\"text/plain\"));\n  }; //to drop card\n\n\n  const allowDrop = e => {\n    e.preventDefault();\n  };\n\n  const modalCloseHandler = () => {\n    setShowModal(false);\n    setEditDetails(false);\n  };\n\n  const showmodalCloseHandler = () => {\n    setShowDetails(false);\n  }; //modal of Add and Edit Card\n\n\n  let modalContent = showModal ? /*#__PURE__*/React.createElement(React.Fragment, null, formIncompleteError ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 30\n    }\n  }, \"Kindly complete the form before adding Card\") : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.AddCardForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, editDetails ? 'Edit Card' : 'Add Card'), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.FormInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: style.Lable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 41\n    }\n  }, \"Enter a title for your task:\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 106\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    defaultValue: editDetails ? cardName : \"\",\n    placeholder: \"e.g. Add a new icon\",\n    ref: cardNames,\n    onChange: e => setCardTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 115\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.FormInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: style.Lable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 41\n    }\n  }, \"Choose members for this task(select multiple,if needed):\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"membersList\",\n    name: \"membersList\",\n    defaultValue: editDetails ? teamDetail : \"\",\n    multiple: true,\n    ref: teamDetails,\n    onChange: onSelectChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 134\n    }\n  }, memberArr.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    value: item,\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 303\n    }\n  }, item)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.FormInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: style.Lable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 41\n    }\n  }, \"Add the description for your task:\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"description\",\n    type: \"text\",\n    defaultValue: editDetails ? descDetails : \"\",\n    placeholder: \"Add your description here\",\n    ref: descrpDetails,\n    onChange: e => setDescrptn(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 112\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.FormInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: style.Lable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 41\n    }\n  }, \"Select the due-date for this task:\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"due_date\",\n    type: \"date\",\n    min: date,\n    defaultValue: editDetails ? dateDetails : \"\",\n    ref: datesDetails,\n    onChange: e => setDueDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 112\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: style.AddButton,\n    id: \"CreateCard\",\n    disabled: formComplete,\n    onClick: handleAddCardData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, editDetails ? 'Edit Card' : 'Add Card')) : null; //modal of show card details\n\n  let showmodalContent = showDetails ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.ShowCardDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.ShowcardHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, cardName), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.editAndArcbtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"editBtn\",\n    className: style.EditButton,\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"archiveBtn\",\n    className: style.ArchiveButton,\n    onClick: handleArchive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, \"Archive\"))), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, \"in \", boardTitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"HorizontalLine\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"hrline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }, descDetails), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, \"Members\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, teamDetail !== undefined && teamDetail.map(i => /*#__PURE__*/React.createElement(\"span\", {\n    className: style.cardMembers,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 15\n    }\n  }, i.charAt(0)))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, \"Due Date\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 26\n    }\n  }, dateDetails))) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.CardData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, cardData ? Object.entries(cardData).map(item => /*#__PURE__*/React.createElement(\"div\", {\n    key: item[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.CardInfo,\n    id: item[0],\n    value: item[1].cardTitle,\n    onClick: e => onCardClick(item[1].cardTitle, item[1].descrptn, item[1].dueDate, item[1].team, item[0], e),\n    draggable: \"true\",\n    onDragStart: e => drag(item[1], item[0], e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.CardHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.CardName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }, item[1].cardTitle)), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.CardIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  }, item[1].team !== undefined ? item[1].team.map(i => /*#__PURE__*/React.createElement(\"span\", {\n    className: style.cardMembers,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }, i.charAt(0))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 23\n    }\n  })))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: style.NotaskAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, \"No tasks added\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.CardBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: style.AddCardBtn,\n    onClick: () => setShowModal(true),\n    onDragOver: allowDrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, \"Add a card\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }), showModal && /*#__PURE__*/React.createElement(Modal, {\n    content: modalContent,\n    close: modalCloseHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }), showDetails && /*#__PURE__*/React.createElement(Modal, {\n    content: showmodalContent,\n    close: showmodalCloseHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Card;","map":{"version":3,"sources":["/home/wws/pro-organiser-application/src/components/card/Card.js"],"names":["React","useState","useEffect","useContext","style","Modal","Axios","AuthContext","Card","props","currentUser","showModal","setShowModal","members","columnId","boardId","boardTitle","isCardDragged","cardData","setCardData","showDetails","setShowDetails","cardName","setCardName","descDetails","setDescDetails","dateDetails","setDateDetails","teamDetail","setTeamDetails","editDetails","setEditDetails","cardId","setCardId","isCardAdded","setIsCardAdded","isCardDelete","setIsCardDelete","isCardEdited","setIsCardEdited","cardTitle","setCardTitle","team","setTeam","descrptn","setDescrptn","dueDate","setDueDate","formComplete","setFormComplete","formIncompleteError","setFormIncompleteError","memberArr","split","cardNames","useRef","teamDetails","descrpDetails","datesDetails","userId","uid","today","Date","month","day","getMonth","getDate","date","getFullYear","getCardData","get","then","response","data","catch","error","console","log","handleAddCardData","e","current","value","length","put","alert","post","onCardClick","handleEdit","handleArchive","delete","onSelectChange","values","target","selectedOptions","map","opt","drag","itemData","dragCardId","draggedCard","dataTransfer","setData","JSON","stringify","getData","allowDrop","preventDefault","modalCloseHandler","showmodalCloseHandler","modalContent","color","AddCardForm","FormInput","Lable","item","AddButton","showmodalContent","ShowCardDetails","ShowcardHeader","editAndArcbtn","EditButton","ArchiveButton","undefined","i","cardMembers","charAt","CardData","Object","entries","CardInfo","CardHeader","CardName","CardIcon","NotaskAdd","CardBtn","AddCardBtn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport style from \"./Card.module.css\";\nimport Modal from './../../common/Modal/Modal';\nimport Axios from \"axios\";\nimport { AuthContext } from '../../context/Auth';\n\nfunction Card(props) {\n  const { currentUser } = useContext(AuthContext);\n\n  const [showModal, setShowModal] = useState(false);\n  const { members, columnId, boardId, boardTitle, isCardDragged } = props;\n  const [cardData, setCardData] = useState(\"\");\n\n  // to handle details of card\n  const [showDetails, setShowDetails] = useState(false);\n  const [cardName, setCardName] = useState(\"\");\n  const [descDetails, setDescDetails] = useState(\"\");\n  const [dateDetails, setDateDetails] = useState(\"\");\n  const [teamDetail, setTeamDetails] = useState([]);\n  const [editDetails, setEditDetails] = useState(false);\n  const [cardId, setCardId] = useState(\"\");\n\n  const [isCardAdded, setIsCardAdded] = useState(false);\n  const [isCardDelete, setIsCardDelete] = useState(false);\n  const [isCardEdited, setIsCardEdited] = useState(false);\n\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const [team, setTeam] = useState([]);\n  const [descrptn, setDescrptn] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false);\n\n  // to split members list string into array\n  const memberArr = members.split(\",\");\n\n  const cardNames = React.useRef();\n  const teamDetails = React.useRef();\n  const descrpDetails = React.useRef();\n  const datesDetails = React.useRef();\n\n  const userId = currentUser.uid;\n\n    // to Hide past date\n    var today = new Date();\n    var month,\n      day = null;\n    if (today.getMonth() < 10 || today.getDate() < 10) {\n      month = \"0\" + (today.getMonth() + 1);\n      day = \"0\" + today.getDate();\n    }\n    var date = today.getFullYear() + \"-\" + month + \"-\" + day;\n\n    useEffect(() => {\n      setIsCardAdded(false);\n      setIsCardDelete(false);\n      setIsCardEdited(false);\n      getCardData();\n    }, [isCardAdded, isCardDragged, isCardDelete, isCardEdited]);\n\n\n  const getCardData = () => {\n    Axios\n    .get(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${boardId}/column/${columnId}/card.json`)\n    .then((response) => {\n        setCardData(response.data);\n    })\n    .catch((error) => console.log(error));\n};\n\n  \n  //  to Add and Edit cardData in DB\n  const handleAddCardData = (e) => {\n    //   check if all input is taken\n    if(cardNames.current.value.length === 0 || teamDetails.current.value.length === 0 || descrpDetails.current.value.length === 0 || datesDetails.current.value.length === 0){\n      setFormComplete(false);\n      setFormIncompleteError(true);\n    } else {\n      // if user wants to edit then put request is used\n      if (editDetails) {\n        Axios\n        .put(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${boardId}/column/${columnId}/card/${cardId}.json`,\n          {\n            cardTitle: cardTitle === \"\" ? cardName : cardTitle,\n            team: team.length === 0 ? teamDetail : team,\n            descrptn: descrptn === \"\" ? descDetails : descrptn,\n            dueDate: dueDate === \"\" ? dateDetails : dueDate,\n          }\n        )\n          .then((response) => {\n            alert(\"card edited succesfully\");\n            setIsCardEdited(true);\n          })\n          .catch((error) => console.log(\"Error in editDetails\" + error));\n      }\n      //  if user wants to add a new card\n      else {\n        Axios\n        .post(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${boardId}/column/${columnId}/card.json`,\n          {\n            cardTitle: cardTitle,\n            team: team,\n            descrptn: descrptn,\n            dueDate: dueDate,\n          }\n        )\n          .then((response) => {\n            alert(\"card added succesfully\");\n            setIsCardAdded(true);\n          })\n          .catch((error) => console.log(\"Error\" + error));\n      }\n\n      setShowModal(false);\n      setEditDetails(false);\n\n      setCardTitle(\"\");\n      setTeam([]);\n      setDescrptn(\"\");\n      setDueDate(\"\");\n    }\n  };\n\n  // on click of card this function shows details\n  const onCardClick = (\n    cardName,\n    descDetails,\n    dateDetails,\n    teamDetails,\n    cardId,\n    e\n  ) => {\n    setShowDetails(true);\n\n    setCardName(cardName);\n    setDescDetails(descDetails);\n    setDateDetails(dateDetails);\n    setTeamDetails(teamDetails);\n    setCardId(cardId);\n  };\n\n   // handles edit button click\n   const handleEdit = (e) => {\n    setShowDetails(false);\n    setShowModal(true);\n    setEditDetails(true);\n  };\n\n  // handles archive on card archive click\n  const handleArchive = (e) => {\n    Axios\n    .delete(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${boardId}/column/${columnId}/card/${cardId}.json`)\n      .then((response) => {\n        alert(\"card archived succesfully\");\n        setIsCardDelete(true);\n      })\n      .catch((error) => console.log(\"Error\" + error));\n\n    setShowDetails(false);\n  };\n\n//To display multiple team member selected\n  const onSelectChange = (e) => {\n    const values = [...e.target.selectedOptions].map((opt) => opt.value);\n    setTeam(values);\n  };\n\n  //to drag card\n  const drag = (itemData, dragCardId, e) => {\n    var draggedCard = {\n      columnId: columnId,\n      dragCardId: dragCardId,\n      cardData: itemData,\n    };\n\n    e.dataTransfer.setData(\"text/plain\", JSON.stringify(draggedCard));\n    console.log(e.dataTransfer.getData(\"text/plain\"));\n  };\n\n  //to drop card\n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n\n  const  modalCloseHandler = () => { setShowModal(false);setEditDetails(false);};\n\n  const  showmodalCloseHandler = () => {setShowDetails(false)};\n\n  //modal of Add and Edit Card\n  let modalContent = showModal ? \n\n  (\n      <>\n      {formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding Card</p> : null}\n      <div className={style.AddCardForm}>\n        <h2>{editDetails ? 'Edit Card' : 'Add Card'}</h2>\n       <div className={style.FormInput}><span className={style.Lable}>Enter a title for your task:</span><br></br><input type=\"text\" id=\"title\" defaultValue={editDetails ? cardName : \"\"} placeholder=\"e.g. Add a new icon\" ref={cardNames} onChange={(e) => setCardTitle(e.target.value)}/></div>\n       <div className={style.FormInput}><span className={style.Lable}>Choose members for this task(select multiple,if needed):</span><select  id=\"membersList\" name=\"membersList\" defaultValue={editDetails ? teamDetail : \"\"} multiple ref={teamDetails} onChange={onSelectChange}>{memberArr.map((item) => (<option value={item} key={item}>{item}</option>))}</select></div>\n       <div className={style.FormInput}><span className={style.Lable}>Add the description for your task:</span><input id=\"description\" type=\"text\"  defaultValue={editDetails ? descDetails : \"\"} placeholder=\"Add your description here\" ref={descrpDetails}  onChange={(e) => setDescrptn(e.target.value)}/></div>\n       <div className={style.FormInput}><span className={style.Lable}>Select the due-date for this task:</span><input id=\"due_date\" type=\"date\" min={date} defaultValue={editDetails ? dateDetails : \"\"} ref={datesDetails} onChange={(e) => setDueDate(e.target.value)}/></div>\n      </div>\n      <button className={style.AddButton} id=\"CreateCard\" disabled={formComplete} onClick={handleAddCardData}>{editDetails ? 'Edit Card' : 'Add Card'}</button>\n      </>\n  )\n  :null;\n\n  //modal of show card details\n  let showmodalContent = showDetails ? \n\n  (\n      <>\n      <div className={style.ShowCardDetails}>\n        <div className={style.ShowcardHeader}>\n          <h2>{cardName}</h2>\n          <div className={style.editAndArcbtn}>\n            <button type=\"button\" id=\"editBtn\" className={style.EditButton} onClick={handleEdit}>Edit</button>\n            <button type=\"button\" id=\"archiveBtn\" className={style.ArchiveButton} onClick={handleArchive}>Archive</button>\n          </div>\n        </div>\n        <small>in {boardTitle}</small>\n        <div className=\"HorizontalLine\">\n            <hr className=\"hrline\"></hr>\n        </div>\n        <h3>Description</h3><div>{descDetails}</div>\n        <br/>\n        <h3>Members</h3>\n        <div>\n          {teamDetail !== undefined &&\n            teamDetail.map((i) => (\n              <span className={style.cardMembers} key={i}>{i.charAt(0)}</span>\n            ))}\n        </div>\n        <br/>\n        <h3>Due Date</h3><div>{dateDetails}</div>\n      </div>\n      </>\n  )\n  :null;\n\n  return (\n    <div>\n      <div className={style.CardData}>\n      {cardData ?\n        Object.entries(cardData).map((item) => (\n          <div  key={item[0]}>\n          <div className={style.CardInfo}      \n                id={item[0]}\n                value={item[1].cardTitle}\n                onClick={(e) =>\n                  onCardClick(\n                    item[1].cardTitle,\n                    item[1].descrptn,\n                    item[1].dueDate,\n                    item[1].team,\n                    item[0],\n                    e\n                  )\n                }\n                draggable=\"true\"\n                onDragStart={(e) => drag(item[1], item[0], e)}\n                >\n          <div className={style.CardHeader}>\n          <div className={style.CardName}>{item[1].cardTitle}</div>\n          </div>\n          <div className={style.CardIcon}>\n          <div><i className=\"fas fa-list\"></i></div>\n          <div>\n                    {item[1].team !== undefined ? (\n                      item[1].team.map((i) => (\n                        <span className={style.cardMembers} key={i}>\n                          {i.charAt(0)}\n                        </span>\n                      ))\n                    ) : (\n                      <div></div>\n                    )}\n                  </div>\n          </div>\n          </div>\n          </div>\n         ) ): <div className={style.NotaskAdd}>No tasks added</div>}\n          <div className={style.CardBtn}>\n            <button className={style.AddCardBtn} onClick={() => setShowModal(true)} onDragOver={allowDrop} >Add a card</button>\n          </div>\n      </div>\n        <br />\n        {showModal && (\n        \n            <Modal  \n                content = {modalContent}\n                close = {modalCloseHandler}/> \n        )}\n       \n       {showDetails && (\n        \n        <Modal  \n            content = {showmodalContent}\n            close = {showmodalCloseHandler}/> \n    )}\n\n    </div>\n)\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}