{"ast":null,"code":"var _jsxFileName = \"/home/wws/Desktop/pro-organiser-application/src/pages/Board/Board.js\";\nimport React, { useState, useEffect } from \"react\";\nimport style from './Boards.module.css';\nimport Axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../common/loader/Loader\";\nexport const Boards = () => {\n  const [columnData, setColumnData] = useState({});\n  const [showColumn, setShowColumn] = useState(false);\n  const [loading, setLoading] = useState(true);\n  document.title = \"Pro Organizer\";\n  useEffect(() => {\n    getBoardContents();\n  }, [showBoard]);\n\n  const getBoardContents = () => {\n    Axios.get(\"https://pro-organiser-app.firebaseio.com/boardContents.json\").then(response => {\n      setTimeout(setBoardContents(response.data), 50000);\n      setLoading(false);\n\n      if (boardContents !== null) {\n        setShowBoard(true);\n      } else setShowBoard(false);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.BoardContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.BoardsTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Boards\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), showBoard ? /*#__PURE__*/React.createElement(\"div\", {\n    className: style.BoardsData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }, boardContents && Object.entries(boardContents).map(item => /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: \"/\" + item[1].boardName,\n      state: {\n        type: item[1].boardType,\n        members: item[1].members,\n        boardId: item[0],\n        key: item[0]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.BoardItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: style.BoardName,\n    key: item[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, item[1].boardName))))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  }, \"You haven't created any boards. Kindly click on the 'Create Board' button in the navigation bar to create a board.\"))));\n};\nexport default Boards;","map":{"version":3,"sources":["/home/wws/Desktop/pro-organiser-application/src/pages/Board/Board.js"],"names":["React","useState","useEffect","style","Axios","Link","Loader","Boards","columnData","setColumnData","showColumn","setShowColumn","loading","setLoading","document","title","getBoardContents","showBoard","get","then","response","setTimeout","setBoardContents","data","boardContents","setShowBoard","catch","err","console","log","BoardContainer","BoardsTitle","BoardsData","Object","entries","map","item","pathname","boardName","state","type","boardType","members","boardId","key","BoardItem","BoardName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAExB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEAa,EAAAA,QAAQ,CAACC,KAAT,GAAiB,eAAjB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,gBAAgB;AACnB,GAFQ,EAEN,CAACC,SAAD,CAFM,CAAT;;AAIA,QAAMD,gBAAgB,GAAG,MAAM;AAC3BZ,IAAAA,KAAK,CACJc,GADD,CACK,6DADL,EAECC,IAFD,CAEOC,QAAD,IAAc;AAClBC,MAAAA,UAAU,CAACC,gBAAgB,CAACF,QAAQ,CAACG,IAAV,CAAjB,EAAkC,KAAlC,CAAV;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,UAAIW,aAAa,KAAK,IAAtB,EAA4B;AAC1BC,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAFD,MAEOA,YAAY,CAAC,KAAD,CAAZ;AACR,KARD,EASCC,KATD,CASQC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAThB;AAUH,GAXD;;AAaA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGf,OAAO,gBACN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAGN,uDACE;AAAK,IAAA,SAAS,EAAET,KAAK,CAAC2B,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE3B,KAAK,CAAC4B,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKGd,SAAS,gBACR;AAAK,IAAA,SAAS,EAAEd,KAAK,CAAC6B,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,aAAa,IACZS,MAAM,CAACC,OAAP,CAAeV,aAAf,EAA8BW,GAA9B,CAAmCC,IAAD,iBAChC,oBAAC,IAAD;AACE,IAAA,EAAE,EAAE;AACFC,MAAAA,QAAQ,EAAE,MAAMD,IAAI,CAAC,CAAD,CAAJ,CAAQE,SADtB;AAEFC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAEJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,SADT;AAELC,QAAAA,OAAO,EAAEN,IAAI,CAAC,CAAD,CAAJ,CAAQM,OAFZ;AAGLC,QAAAA,OAAO,EAAEP,IAAI,CAAC,CAAD,CAHR;AAILQ,QAAAA,GAAG,EAACR,IAAI,CAAC,CAAD;AAJH;AAFL,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE;AAAK,IAAA,SAAS,EAAEjC,KAAK,CAAC0C,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAE1C,KAAK,CAAC2C,SAAvB;AAAkC,IAAA,GAAG,EAAEV,IAAI,CAAC,CAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,IAAI,CAAC,CAAD,CAAJ,CAAQE,SADZ,CADF,CAXF,CADF,CAFJ,CADQ,gBAwBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0HA7BJ,CADF,CALJ,CADJ;AA8CC,CAvEE;AA0EP,eAAe/B,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport style from  './Boards.module.css';\nimport Axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../common/loader/Loader\";\n\nexport const Boards = () => {\n\n    const [columnData, setColumnData] = useState({});\n    const [showColumn, setShowColumn] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    document.title = \"Pro Organizer\";\n\n    useEffect(() => {\n        getBoardContents();\n    }, [showBoard]);\n  \n    const getBoardContents = () => {\n        Axios\n        .get(\"https://pro-organiser-app.firebaseio.com/boardContents.json\")\n        .then((response) => {\n          setTimeout(setBoardContents(response.data), 50000);\n          setLoading(false);\n          if (boardContents !== null) {\n            setShowBoard(true);\n          } else setShowBoard(false);\n        })\n        .catch((err) => console.log(err));\n    };\n\n    return (\n        <div>\n          <br />\n          {loading ? (\n            <Loader></Loader>\n          ) : (\n            <>\n              <div className={style.BoardContainer}>\n                <div className={style.BoardsTitle}>\n                    <span>Boards</span>\n                </div>\n                <br />\n                {showBoard ? (\n                  <div className={style.BoardsData}>\n                    {boardContents &&\n                      Object.entries(boardContents).map((item) => (\n                        <Link\n                          to={{\n                            pathname: \"/\" + item[1].boardName,\n                            state: {\n                              type: item[1].boardType,\n                              members: item[1].members,\n                              boardId: item[0],\n                              key:item[0],\n                            },\n                          }}\n                        >\n                          <div className={style.BoardItem}>\n                            <span className={style.BoardName} key={item[0]}>\n                               {item[1].boardName}\n                            </span>\n                          </div>\n                        </Link>\n                      ))}\n                  </div>\n                ) : (\n                  <p>\n                    You haven't created any boards. Kindly click on the 'Create\n                    Board' button in the navigation bar to create a board.\n                  </p>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      );\n    }\n    \n\nexport default Boards;"]},"metadata":{},"sourceType":"module"}