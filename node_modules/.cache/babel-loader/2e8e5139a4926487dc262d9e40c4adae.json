{"ast":null,"code":"var _jsxFileName = \"/home/wws/Desktop/pro-organiser-application/src/components/addColumn/AddColumn.js\";\nimport React, { useState, useEffect } from \"react\";\nimport style from \"./AddColumn.module.css\";\nimport Modal from './../../common/Modal/Modal';\nimport Axios from \"axios\";\n\nfunction AddColumn(props) {\n  const [showModal, setShowModal] = useState(false);\n  const [columnName, setColumnName] = useState(\"\");\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false);\n  const columnNames = React.useRef();\n  useEffect(() => {\n    modalOpenHandler();\n  }, [showModal]);\n\n  const modalOpenHandler = () => {\n    let colBox = document.getElementById(\"addColumnBox\");\n    colBox.addEventListener(\"click\", () => {\n      setShowModal(true);\n    });\n  };\n\n  const handleAddColumnClick = event => {\n    // event.preventDefault();\n    if (columnNames.current.value.length === 0) {\n      setFormComplete(false);\n      setFormIncompleteError(true);\n    } else {\n      // add column name in firebase\n      Axios.post(`https://pro-organiser-app.firebaseio.com/boardContents/${props.boardId}/column.json`, {\n        name: columnName\n      }).then(response => {\n        alert(\"column added succesfully\");\n        props.setShowColumn(true);\n      }).catch(err => console.log(err));\n      setShowModal(false);\n    }\n  };\n\n  const modalCloseHandler = () => {\n    setShowModal(false);\n  };\n\n  let modalContent = showModal ? /*#__PURE__*/React.createElement(React.Fragment, null, formIncompleteError ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 30\n    }\n  }, \"Kindly complete the form before adding Column\") : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.AddColumnForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Add a Column\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.FormInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: style.Lable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 41\n    }\n  }, \"Enter a column name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"column_name\",\n    value: columnName,\n    placeholder: \"Enter a column name\",\n    ref: columnNames,\n    onChange: e => setColumnName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 98\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: style.AddButton,\n    id: \"CreateColumn\",\n    disabled: formComplete,\n    onClick: handleAddColumnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Add Column\")) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.addColumnBox,\n    id: \"addColumnBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Add a Column\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), showModal && /*#__PURE__*/React.createElement(Modal, {\n    content: modalContent,\n    close: modalCloseHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default AddColumn;","map":{"version":3,"sources":["/home/wws/Desktop/pro-organiser-application/src/components/addColumn/AddColumn.js"],"names":["React","useState","useEffect","style","Modal","Axios","AddColumn","props","showModal","setShowModal","columnName","setColumnName","formComplete","setFormComplete","formIncompleteError","setFormIncompleteError","columnNames","useRef","modalOpenHandler","colBox","document","getElementById","addEventListener","handleAddColumnClick","event","current","value","length","post","boardId","name","then","response","alert","setShowColumn","catch","err","console","log","modalCloseHandler","modalContent","color","AddColumnForm","FormInput","Lable","e","target","AddButton","addColumnBox"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport style from \"./AddColumn.module.css\";\nimport Modal from './../../common/Modal/Modal';\nimport Axios from \"axios\";\n\nfunction AddColumn(props) {\n  const [showModal, setShowModal] = useState(false);\n  const [columnName, setColumnName] = useState(\"\");\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false);\n\n  const columnNames  = React.useRef();\n\n  useEffect(() => {\n    modalOpenHandler();\n  }, [showModal]);\n\n  const modalOpenHandler = () => {\n    let colBox = document.getElementById(\"addColumnBox\");\n    colBox.addEventListener(\"click\", () => {\n      setShowModal(true);\n    });\n  };\n\n  const handleAddColumnClick = (event) => {\n    // event.preventDefault();\n        if(columnNames.current.value.length === 0){\n          setFormComplete(false);\n          setFormIncompleteError(true);\n    } else {\n      // add column name in firebase\n      Axios.post(`https://pro-organiser-app.firebaseio.com/boardContents/${props.boardId}/column.json`, {\n        name: columnName,\n      })\n        .then((response) => {\n          alert(\"column added succesfully\");\n          props.setShowColumn(true);\n        })\n        .catch((err) => console.log(err));\n\n      setShowModal(false);\n    }\n  };\n\n\n  const  modalCloseHandler = () => {setShowModal(false)};\n\n  let modalContent = showModal ? \n\n  (\n      <>\n      {formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding Column</p> : null}\n      <div className={style.AddColumnForm}>\n        <h2>Add a Column</h2>\n       <div className={style.FormInput}><span className={style.Lable}>Enter a column name:</span><input type=\"text\" id=\"column_name\" value={columnName} placeholder=\"Enter a column name\" ref={columnNames} onChange={(e) => setColumnName(e.target.value)}/></div>\n      </div>\n      <button className={style.AddButton} id=\"CreateColumn\" disabled={formComplete} onClick={handleAddColumnClick}>Add Column</button>\n      </>\n  )\n  :null;\n\n  return (\n    <div>\n       <div className={style.addColumnBox} id=\"addColumnBox\">\n        <div>Add a Column</div>\n      </div>\n        <br />\n        {showModal && (\n        \n            <Modal  \n                content = {modalContent}\n                close = {modalCloseHandler}/> \n        )}\n       \n    </div>\n)\n}\n\nexport default AddColumn;\n"]},"metadata":{},"sourceType":"module"}