{"version":3,"sources":["pages/CreateBoard/CreateBoard.module.css","pages/AllBoards/AllBoards.module.css","components/addColumn/AddColumn.module.css","components/card/Card.module.css","pages/Main/Main.module.css","pages/CreateBoard/CreateBoard.js","common/loader/Loader.js","pages/AllBoards/AllBoards.js","common/Backdrop/Backdrop.js","common/Modal/Modal.js","components/addColumn/AddColumn.js","components/card/Card.js","pages/Board/Board.js","AppRouter.js","pages/Main/Main.js","App.js","serviceWorker.js","index.js","pages/Board/Board.module.css"],"names":["module","exports","CreateBoard","props","state","formComplete","formIncompleteError","selectedBoard","addBoardToDBHandler","event","preventDefault","NameOfboard","current","value","length","TeamMember","TypeOfBoard","setState","boardName","members","boardType","Axios","post","then","response","history","push","catch","error","console","log","React","createRef","get","boardContents","data","className","style","CreateMain","this","color","CreateTitle","onSubmit","Createlable","id","type","name","placeholder","ref","CreateButton","disabled","Component","Loader","AllBoards","useState","setBoardContents","showBoard","setShowBoard","loading","setLoading","document","title","useEffect","getBoardContents","setTimeout","BoardContainer","BoardsTitle","BoardsData","Object","entries","map","item","to","pathname","boardId","BoardItem","BoardName","key","Backdrop","Modal","onClick","close","modalCloseHandler","content","AddColumn","showModal","setShowModal","columnName","setColumnName","setFormComplete","setFormIncompleteError","columnNames","useRef","modalOpenHandler","getElementById","addEventListener","modalContent","AddColumnForm","FormInput","Lable","onChange","target","AddButton","alert","setShowColumn","addColumnBox","Card","month","columnId","boardTitle","isCardDragged","cardData","setCardData","showDetails","setShowDetails","cardName","setCardName","descDetails","setDescDetails","dateDetails","setDateDetails","teamDetail","setTeamDetails","editDetails","setEditDetails","cardId","setCardId","isCardAdded","setIsCardAdded","isCardDelete","setIsCardDelete","isCardEdited","setIsCardEdited","cardTitle","setCardTitle","team","setTeam","descrptn","setDescrptn","dueDate","setDueDate","memberArr","split","cardNames","teamDetails","descrpDetails","datesDetails","today","Date","day","getMonth","getDate","date","getFullYear","getCardData","AddCardForm","defaultValue","e","multiple","values","selectedOptions","opt","min","put","showmodalContent","ShowCardDetails","ShowcardHeader","editAndArcbtn","EditButton","ArchiveButton","delete","undefined","i","cardMembers","charAt","CardData","CardInfo","onCardClick","draggable","onDragStart","itemData","dragCardId","draggedCard","dataTransfer","setData","JSON","stringify","getData","drag","CardHeader","CardName","CardIcon","NotaskAdd","CardBtn","AddCardBtn","onDragOver","withRouter","match","params","location","columnData","setColumnData","showColumn","setIsCardDragged","isColumnDelete","setIsColumnDelete","useHistory","getColumnData","ColumnContainer","ColumnHeader","ColumnTitle","DeleteBoardBtn","DeleteBtn","window","confirm","ColumnDatas","ColumnCard","ColumnCardHead","ColumnNames","deleteColumn","cardContainer","onDrop","droppedColumnId","droppedCardData","parse","prevColId","prevCardId","draggedCardData","res","err","handleCardDrop","AppRouter","path","component","exact","Board","render","Main","Navbar","NavbarTitle","NavLinks","activeClassName","NavTitle","NavTitle2","App","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.743d38eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateTitle\":\"CreateBoard_CreateTitle__Uo-Fz\",\"Createlable\":\"CreateBoard_Createlable__3mXoE\",\"CreateButton\":\"CreateBoard_CreateButton__21EAL\",\"CreateMain\":\"CreateBoard_CreateMain__Aviuc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BoardContainer\":\"AllBoards_BoardContainer__2J0ah\",\"BoardsTitle\":\"AllBoards_BoardsTitle__33J8l\",\"BoardsData\":\"AllBoards_BoardsData__2Nri0\",\"BoardItem\":\"AllBoards_BoardItem__2JNBt\",\"BoardName\":\"AllBoards_BoardName__3Ejdp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addColumnBox\":\"AddColumn_addColumnBox__18cEe\",\"FormInput\":\"AddColumn_FormInput__1Q1zX\",\"Lable\":\"AddColumn_Lable__yaMz4\",\"AddColumnForm\":\"AddColumn_AddColumnForm__1uH5F\",\"AddButton\":\"AddColumn_AddButton__8E54h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardInfo\":\"Card_CardInfo__Wp0RN\",\"CardHeader\":\"Card_CardHeader__1YaGT\",\"CardIcon\":\"Card_CardIcon__3gx7F\",\"AddCardBtn\":\"Card_AddCardBtn__1W_27\",\"CardName\":\"Card_CardName__1Exi1\",\"cardMembers\":\"Card_cardMembers__2DqIP\",\"FormInput\":\"Card_FormInput__3hfF5\",\"Lable\":\"Card_Lable__1uSWL\",\"AddCardForm\":\"Card_AddCardForm__2J8xp\",\"AddButton\":\"Card_AddButton__1mCQK\",\"NotaskAdd\":\"Card_NotaskAdd__1a_wR\",\"ShowCardDetails\":\"Card_ShowCardDetails__VUC3t\",\"ShowcardHeader\":\"Card_ShowcardHeader__1lU7q\",\"EditButton\":\"Card_EditButton__2usQ0\",\"ArchiveButton\":\"Card_ArchiveButton__3ZJHy\",\"hrline\":\"Card_hrline__2F_CM\",\"editAndArcbtn\":\"Card_editAndArcbtn__yhiM8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Main_Navbar__3NHyH\",\"NavbarTitle\":\"Main_NavbarTitle__3mS82\",\"NavLinks\":\"Main_NavLinks__9Q4xh\",\"NavTitle\":\"Main_NavTitle__GDh0W\",\"NavTitle2\":\"Main_NavTitle2__3qBEM\"};","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport style from './CreateBoard.module.css';\n\n\nclass CreateBoard extends Component {\n    constructor(props){\n        super(props);\n        this.NameOfboard = React.createRef();\n        this.TeamMember = React.createRef();\n        this.TypeOfBoard = React.createRef();\n    }\n    \n    state = {\n    \n        formComplete : false,\n        formIncompleteError : false,\n        selectedBoard : {}\n    }\n\n\n    componentDidMount() {\n        Axios.get('https://pro-organiser-app.firebaseio.com/boardContents.json')\n            .then(response => {\n                console.log(response);\n                this.setState({\n                    boardContents: response.data\n                })\n            })\n            .catch(error => {console.log(error)});\n    }\n\n    addBoardToDBHandler = (event) => {\n        event.preventDefault();\n        if(this.NameOfboard.current.value.length === 0 || this.TeamMember.current.value.length === 0 || this.TypeOfBoard.current.value.length === 0){\n            this.setState({\n                formComplete : false,\n                formIncompleteError : true\n            })\n        }else{\n            let selectedBoard = {...this.state.selectedBoard}\n            selectedBoard.boardName = this.NameOfboard.current.value;\n            selectedBoard.members = this.TeamMember.current.value;\n            selectedBoard.boardType = this.TypeOfBoard.current.value;\n            \n            Axios.post('https://pro-organiser-app.firebaseio.com/boardContents.json', selectedBoard)\n                .then(response => {\n                    // alert(\"Board added succesfully\");\n                                   this.props.history.push('/');\n                                \n                        }).catch(error => {console.log(error)});\n                    }\n                }\n\n    render() {\n    return (\n        <div className={style.CreateMain}>\n            {this.state.formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding the Board</p> : null}\n            <div className={style.CreateTitle}>\n            <span>Create a Board</span>\n            </div>\n          \n            <form onSubmit={this.addBoardToDBHandler}>\n            <label>\n                <div className={style.Createlable}>Enter a name of your board:</div>\n                <input id=\"name\" type=\"text\" name=\"name\" placeholder=\"eg Agile Sprint Board\" ref={this.NameOfboard} />\n            </label>\n            <label>\n                <div className={style.Createlable}>Add your team members:</div>\n                <input id=\"team\" type=\"text\" name=\"team\" placeholder=\"Add your team (separated by commas)\" ref={this.TeamMember} />\n            </label>\n            <label>\n                <div className={style.Createlable}>Enter the type of your board:</div>\n                <input id=\"type\" type=\"text\" name=\"type\" placeholder=\"eg Design UX\" ref={this.TypeOfBoard} />\n            </label>\n            <button type=\"submit\" id=\"CreateBoard\" className={style.CreateButton} disabled={this.state.formComplete}>create</button>\n            </form>\n        </div>\n    );\n}\n}\n\nexport default CreateBoard;\n","import React from 'react';\nimport './Loader.css'\n\n\nfunction Loader() {\n    return (\n       \n        <div id=\"fountainG\">\n            <div id=\"fountainG_1\" className=\"fountainG\"></div>\n            <div id=\"fountainG_2\" className=\"fountainG\"></div>\n            <div id=\"fountainG_3\" className=\"fountainG\"></div>\n            <div id=\"fountainG_4\" className=\"fountainG\"></div>\n            <div id=\"fountainG_5\" className=\"fountainG\"></div>\n            <div id=\"fountainG_6\" className=\"fountainG\"></div>\n        </div>\n        \n    )\n}\n\nexport default Loader;\n","import React, { useState, useEffect } from \"react\";\nimport style from  './AllBoards.module.css';\nimport Axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../common/loader/Loader\";\n\nexport const AllBoards = () => {\n\n    const [boardContents, setBoardContents] = useState({});\n    const [showBoard, setShowBoard] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    document.title = \"Pro Organizer\";\n\n    useEffect(() => {\n        getBoardContents();\n    }, [showBoard]);\n  \n    const getBoardContents = () => {\n        Axios\n        .get(\"https://pro-organiser-app.firebaseio.com/boardContents.json\")\n        .then((response) => {\n          setTimeout(setBoardContents(response.data), 50000);\n          setLoading(false);\n          if (boardContents !== null) {\n            setShowBoard(true);\n          } else setShowBoard(false);\n        })\n        .catch((error) => console.log(error));\n    };\n\n    return (\n        <div>\n          <br />\n          {loading ? (\n            <Loader></Loader>\n          ) : (\n            <>\n              <div className={style.BoardContainer}>\n                <div className={style.BoardsTitle}>\n                    <span>Boards</span>\n                </div>\n                <br />\n                {showBoard ? (\n                  <div className={style.BoardsData}>\n                    {boardContents &&\n                      Object.entries(boardContents).map((item) => (\n                        <Link\n                          to={{\n                            pathname: \"/\" + item[1].boardName,\n                            state: {\n                              type: item[1].boardType,\n                              members: item[1].members,\n                              boardId: item[0],\n                            },\n                          }}\n                        >\n                          <div className={style.BoardItem}>\n                            <span className={style.BoardName} key={item[0]}>\n                               {item[1].boardName}\n                            </span>\n                          </div>\n                        </Link>\n                      ))}\n                  </div>\n                ) : (\n                  <p>\n                    You haven't created any boards. Kindly click on the 'Create\n                    Board' button in the navigation bar to create a board.\n                  </p>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      );\n    }\n    \n\nexport default AllBoards;\n","import React from 'react';\n\nconst Backdrop = () => {\n    return (\n        <div style={{'width':'100%', 'height': '100%', 'backgroundColor': 'rgba(0,0,0,0.5)', 'zIndex': 100, 'position':'fixed','left': 0,'top': 0}}></div>\n    )\n}\n\nexport default Backdrop;","import React, { Component } from 'react';\nimport './Modal.css';\n\nimport Backdrop from './../Backdrop/Backdrop';\n\nclass Modal extends Component {\n    \n    render() {\n      \n        return (\n            <div>\n                <Backdrop />\n                <div className=\"modalbody\">\n                <button className=\"closebutton\" onClick = {() => this.props.close(this.props.modalCloseHandler)}>X</button>\n                    {this.props.content}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Modal;\n","import React, { useState, useEffect } from \"react\";\nimport style from \"./AddColumn.module.css\";\nimport Modal from './../../common/Modal/Modal';\nimport Axios from \"axios\";\n\nfunction AddColumn(props) {\n  const [showModal, setShowModal] = useState(false);\n  const [columnName, setColumnName] = useState(\"\");\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false);\n\n  const columnNames  = React.useRef();\n\n  useEffect(() => {\n    modalOpenHandler();\n  }, [showModal]);\n\n  const handleAddColumnClick = (event) => {\n        if(columnNames.current.value.length === 0){\n          setFormComplete(false);\n          setFormIncompleteError(true);\n    } else {\n      // add column name in firebase\n      Axios.post(`https://pro-organiser-app.firebaseio.com/boardContents/${props.boardId}/column.json`, {\n        name: columnName,\n      })\n        .then((response) => {\n          alert(\"column added succesfully\");\n          props.setShowColumn(true);\n        })\n        .catch((error) => console.log(error));\n\n      setShowModal(false);\n    }\n  };\n\n  const modalOpenHandler = () => {\n    let colBox = document.getElementById(\"addColumnBox\");\n    colBox.addEventListener(\"click\", () => {\n      setShowModal(true);\n    });\n  };\n\n  const  modalCloseHandler = () => {setShowModal(false)};\n\n  let modalContent = showModal ? \n\n  (\n      <>\n      {formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding Column</p> : null}\n      <div className={style.AddColumnForm}>\n        <h2>Add column</h2>\n       <div className={style.FormInput}><span className={style.Lable}>Enter a column name:</span><input type=\"text\" id=\"column_name\" value={columnName} placeholder=\"Enter a column name\" ref={columnNames} onChange={(event) => setColumnName(event.target.value)}/></div>\n      </div>\n      <button className={style.AddButton} id=\"CreateColumn\" disabled={formComplete} onClick={handleAddColumnClick}>Add Column</button>\n      </>\n  )\n  :null;\n\n  return (\n    <div>\n       <div className={style.addColumnBox} id=\"addColumnBox\">\n        <div>Add a Column</div>\n      </div>\n        <br />\n        {showModal && (\n        \n            <Modal  \n                content = {modalContent}\n                close = {modalCloseHandler}/> \n        )}\n       \n    </div>\n)\n}\n\nexport default AddColumn;\n","import React, { useState, useEffect } from \"react\";\nimport style from \"./Card.module.css\";\nimport Modal from './../../common/Modal/Modal';\nimport Axios from \"axios\";\n\nfunction Card(props) {\n  const [showModal, setShowModal] = useState(false);\n  const { members, columnId, boardId, boardTitle, isCardDragged } = props;\n  const [cardData, setCardData] = useState(\"\");\n\n  // to handle details of card\n  const [showDetails, setShowDetails] = useState(false);\n  const [cardName, setCardName] = useState(\"\");\n  const [descDetails, setDescDetails] = useState(\"\");\n  const [dateDetails, setDateDetails] = useState(\"\");\n  const [teamDetail, setTeamDetails] = useState([]);\n  const [editDetails, setEditDetails] = useState(false);\n  const [cardId, setCardId] = useState(\"\");\n\n  const [isCardAdded, setIsCardAdded] = useState(false);\n  const [isCardDelete, setIsCardDelete] = useState(false);\n  const [isCardEdited, setIsCardEdited] = useState(false);\n\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const [team, setTeam] = useState([]);\n  const [descrptn, setDescrptn] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false);\n\n  // to split members list string into array\n  const memberArr = members.split(\",\");\n\n  const cardNames = React.useRef();\n  const teamDetails = React.useRef();\n  const descrpDetails = React.useRef();\n  const datesDetails = React.useRef();\n\n    // to Hide past date\n    var today = new Date();\n    var month,\n      day = null;\n    if (today.getMonth() < 10 || today.getDate() < 10) {\n      month = \"0\" + (today.getMonth() + 1);\n      day = \"0\" + today.getDate();\n    }\n    var date = today.getFullYear() + \"-\" + month + \"-\" + day;\n\n    useEffect(() => {\n      setIsCardAdded(false);\n      setIsCardDelete(false);\n      setIsCardEdited(false);\n      getCardData();\n    }, [isCardAdded, isCardDragged, isCardDelete, isCardEdited]);\n\n\n  const getCardData = () => {\n    Axios\n    .get(`https://pro-organiser-app.firebaseio.com/boardContents/${boardId}/column/${columnId}/card.json`)\n    .then((response) => {\n        setCardData(response.data);\n    })\n    .catch((error) => console.log(error));\n};\n\n  \n  //  to Add and Edit cardData in DB\n  const handleAddCardData = (e) => {\n    //   check if all input is taken\n    if(cardNames.current.value.length === 0 || teamDetails.current.value.length === 0 || descrpDetails.current.value.length === 0 || datesDetails.current.value.length === 0){\n      setFormComplete(false);\n      setFormIncompleteError(true);\n    } else {\n      // if user wants to edit then put request is used\n      if (editDetails) {\n        Axios\n        .put(`https://pro-organiser-app.firebaseio.com/boardContents/${boardId}/column/${columnId}/card/${cardId}.json`,\n          {\n            cardTitle: cardTitle === \"\" ? cardName : cardTitle,\n            team: team.length === 0 ? teamDetail : team,\n            descrptn: descrptn === \"\" ? descDetails : descrptn,\n            dueDate: dueDate === \"\" ? dateDetails : dueDate,\n          }\n        )\n          .then((response) => {\n            alert(\"card edited succesfully\");\n            setIsCardEdited(true);\n          })\n          .catch((error) => console.log(\"Error in editDetails\" + error));\n      }\n      //  if user wants to add a new card\n      else {\n        Axios\n        .post(`https://pro-organiser-app.firebaseio.com/boardContents/${boardId}/column/${columnId}/card.json`,\n          {\n            cardTitle: cardTitle,\n            team: team,\n            descrptn: descrptn,\n            dueDate: dueDate,\n          }\n        )\n          .then((response) => {\n            alert(\"card added succesfully\");\n            setIsCardAdded(true);\n          })\n          .catch((error) => console.log(\"Error\" + error));\n      }\n\n      setShowModal(false);\n      setEditDetails(false);\n\n      setCardTitle(\"\");\n      setTeam([]);\n      setDescrptn(\"\");\n      setDueDate(\"\");\n    }\n  };\n\n  // on click of card this function shows details\n  const onCardClick = (\n    cardName,\n    descDetails,\n    dateDetails,\n    teamDetails,\n    cardId,\n    e\n  ) => {\n    setShowDetails(true);\n\n    setCardName(cardName);\n    setDescDetails(descDetails);\n    setDateDetails(dateDetails);\n    setTeamDetails(teamDetails);\n    setCardId(cardId);\n  };\n\n   // handles edit button click\n   const handleEdit = (e) => {\n    setShowDetails(false);\n    setShowModal(true);\n    setEditDetails(true);\n  };\n\n  // handles archive on card archive click\n  const handleArchive = (e) => {\n    Axios\n    .delete(`https://pro-organiser-app.firebaseio.com/boardContents/${boardId}/column/${columnId}/card/${cardId}.json`)\n      .then((response) => {\n        alert(\"card archived succesfully\");\n        setIsCardDelete(true);\n      })\n      .catch((error) => console.log(\"Error\" + error));\n\n    setShowDetails(false);\n  };\n\n//To display multiple team member selected\n  const onSelectChange = (e) => {\n    const values = [...e.target.selectedOptions].map((opt) => opt.value);\n    setTeam(values);\n  };\n\n  //to drag card\n  const drag = (itemData, dragCardId, e) => {\n    var draggedCard = {\n      columnId: columnId,\n      dragCardId: dragCardId,\n      cardData: itemData,\n    };\n\n    e.dataTransfer.setData(\"text/plain\", JSON.stringify(draggedCard));\n    console.log(e.dataTransfer.getData(\"text/plain\"));\n  };\n\n  //to drop card\n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n\n  const  modalCloseHandler = () => { setShowModal(false);setEditDetails(false);};\n\n  const  showmodalCloseHandler = () => {setShowDetails(false)};\n\n  //modal of Add and Edit Card\n  let modalContent = showModal ? \n\n  (\n      <>\n      {formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding Card</p> : null}\n      <div className={style.AddCardForm}>\n        <h2>{editDetails ? 'Edit Card' : 'Add Card'}</h2>\n       <div className={style.FormInput}><span className={style.Lable}>Enter a title for your task:</span><br></br><input type=\"text\" id=\"title\" defaultValue={editDetails ? cardName : \"\"} placeholder=\"e.g. Add a new icon\" ref={cardNames} onChange={(e) => setCardTitle(e.target.value)}/></div>\n       <div className={style.FormInput}><span className={style.Lable}>Choose members for this task(select multiple,if needed):</span><select  id=\"membersList\" name=\"membersList\" defaultValue={editDetails ? teamDetail : \"\"} multiple ref={teamDetails} onChange={onSelectChange}>{memberArr.map((item) => (<option value={item} key={item}>{item}</option>))}</select></div>\n       <div className={style.FormInput}><span className={style.Lable}>Add the description for your task:</span><input id=\"description\" type=\"text\"  defaultValue={editDetails ? descDetails : \"\"} placeholder=\"Add your description here\" ref={descrpDetails}  onChange={(e) => setDescrptn(e.target.value)}/></div>\n       <div className={style.FormInput}><span className={style.Lable}>Select the due-date for this task:</span><input id=\"due_date\" type=\"date\" min={date} defaultValue={editDetails ? dateDetails : \"\"} ref={datesDetails} onChange={(e) => setDueDate(e.target.value)}/></div>\n      </div>\n      <button className={style.AddButton} id=\"CreateCard\" disabled={formComplete} onClick={handleAddCardData}>{editDetails ? 'Edit Card' : 'Add Card'}</button>\n      </>\n  )\n  :null;\n\n  //modal of show card details\n  let showmodalContent = showDetails ? \n\n  (\n      <>\n      <div className={style.ShowCardDetails}>\n        <div className={style.ShowcardHeader}>\n          <h2>{cardName}</h2>\n          <div className={style.editAndArcbtn}>\n            <button type=\"button\" id=\"editBtn\" className={style.EditButton} onClick={handleEdit}>Edit</button>\n            <button type=\"button\" id=\"archiveBtn\" className={style.ArchiveButton} onClick={handleArchive}>Archive</button>\n          </div>\n        </div>\n        <small>in {boardTitle}</small>\n        <div className=\"HorizontalLine\">\n            <hr className=\"hrline\"></hr>\n        </div>\n        <h3>Description</h3><div>{descDetails}</div>\n        <br/>\n        <h3>Members</h3>\n        <div>\n          {teamDetail !== undefined &&\n            teamDetail.map((i) => (\n              <span className={style.cardMembers} key={i}>{i.charAt(0)}</span>\n            ))}\n        </div>\n        <br/>\n        <h3>Due Date</h3><div>{dateDetails}</div>\n      </div>\n      </>\n  )\n  :null;\n\n  return (\n    <div>\n      <div className={style.CardData}>\n      {cardData ?\n        Object.entries(cardData).map((item) => (\n          <div  key={item[0]}>\n          <div className={style.CardInfo}      \n                id={item[0]}\n                value={item[1].cardTitle}\n                onClick={(e) =>\n                  onCardClick(\n                    item[1].cardTitle,\n                    item[1].descrptn,\n                    item[1].dueDate,\n                    item[1].team,\n                    item[0],\n                    e\n                  )\n                }\n                draggable=\"true\"\n                onDragStart={(e) => drag(item[1], item[0], e)}\n                >\n          <div className={style.CardHeader}>\n          <div className={style.CardName}>{item[1].cardTitle}</div>\n          </div>\n          <div className={style.CardIcon}>\n          <div><i className=\"fas fa-list\"></i></div>\n          <div>\n                    {item[1].team !== undefined ? (\n                      item[1].team.map((i) => (\n                        <span className={style.cardMembers} key={i}>\n                          {i.charAt(0)}\n                        </span>\n                      ))\n                    ) : (\n                      <div></div>\n                    )}\n                  </div>\n          </div>\n          </div>\n          </div>\n         ) ): <div className={style.NotaskAdd}>No tasks added</div>}\n          <div className={style.CardBtn}>\n            <button className={style.AddCardBtn} onClick={() => setShowModal(true)} onDragOver={allowDrop} >Add a card</button>\n          </div>\n      </div>\n        <br />\n        {showModal && (\n        \n            <Modal  \n                content = {modalContent}\n                close = {modalCloseHandler}/> \n        )}\n       \n       {showDetails && (\n        \n        <Modal  \n            content = {showmodalContent}\n            close = {showmodalCloseHandler}/> \n    )}\n\n    </div>\n)\n}\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport style from  './Board.module.css';\nimport Axios from 'axios';\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport Loader from \"../../common/loader/Loader\";\nimport AddColumn from \"../../components/addColumn/AddColumn\";\nimport Card from \"../../components/card/Card\";\n\nexport const Board = (props) => {\n    const name = props.match.params.boardName;\n    const members = props.location.state.members;\n\n    const [columnData, setColumnData] = useState({});\n    const [showColumn, setShowColumn] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [isCardDragged, setIsCardDragged] = useState(false);\n    const [isColumnDelete, setIsColumnDelete] = useState(false);\n\n     // to use history function\n    const history = useHistory();\n\n    document.title = `${name} | Pro Organizer`;\n\n    useEffect(() => {\n        setShowColumn(false);\n        setIsCardDragged(false);\n        setIsColumnDelete(false);\n        getColumnData();\n    }, [showColumn, isColumnDelete, isCardDragged]);\n  \n    const getColumnData = () => {\n        Axios\n        .get(`https://pro-organiser-app.firebaseio.com/boardContents/${props.location.state.boardId}/column.json`)\n        .then((response) => {\n            setTimeout(setColumnData(response.data), 5000);\n          setLoading(false);\n        })\n        .catch((error) => console.log(error));\n    };\n\n      // handle board delete\n    const handleBoardDelete = (e) => {\n      if (window.confirm(\"Are you sure you want to delete the board?\")) {\n        Axios\n        .delete(`https://pro-organiser-app.firebaseio.com/boardContents/${props.location.state.boardId}.json`)\n          .then((response) => {\n            alert(\"board deleted succesfully\");\n            history.push(\"/\");\n          })\n          .catch((error) => console.log(\"Error\" + error));\n      }\n    };\n\n      // handle column delete\n    const handleColumnDelete = (columnId, e) => {\n      if (window.confirm(\"Are you sure you want to delete the Column?\")) {\n      Axios\n      .delete(`https://pro-organiser-app.firebaseio.com/boardContents/${props.location.state.boardId}/column/${columnId}.json`)\n        .then((response) => {\n          alert(\"column deleted succesfully\");\n          setIsColumnDelete(true);\n        })\n        .catch((error) => console.log(\"Error\" + error));\n      }\n    };\n\n      //  handle card drop\n  const handleCardDrop = (droppedColumnId, e) => {\n    e.preventDefault();\n    var droppedCardData = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n    console.log(droppedCardData);\n\n    const prevColId = droppedCardData.columnId;\n    const prevCardId = droppedCardData.dragCardId;\n    const draggedCardData = droppedCardData.cardData;\n\n    if (draggedCardData !== null) {\n      //   // Delete from previous column\n      Axios\n      .delete(`https://pro-organiser-app.firebaseio.com/boardContents/${props.location.state.boardId}/column/${prevColId}/card/${prevCardId}.json`)\n        .then((response) => {\n          console.log(\"card removed\");\n        })\n        .catch((error) => console.log(\"Error\" + error));\n\n      // Add card to new column\n      Axios\n      .post(`https://pro-organiser-app.firebaseio.com/boardContents/${props.location.state.boardId}/column/${droppedColumnId}/card.json`,\n        {\n          cardTitle: draggedCardData.cardTitle,\n          team: draggedCardData.team,\n          descrptn: draggedCardData.descrptn,\n          dueDate: draggedCardData.dueDate,\n        }\n      )\n        .then((res) => {\n          console.log(\"card added in new column\");\n          // call new card\n        })\n        .catch((err) => console.log(\"Error\" + err));\n      setIsCardDragged(true);\n    }\n  };\n\n    return (\n        <div>\n          <br />\n          {loading ? (\n            <Loader></Loader>\n          ) : (\n              <div className={style.ColumnContainer}>\n                  <div className={style.ColumnHeader}>\n                    <div className={style.ColumnTitle}>\n                        <span>{name}</span>\n                    </div>\n                    <div className={style.DeleteBoardBtn}>\n                        <button className={style.DeleteBtn} onClick={handleBoardDelete}>Delete Board</button>\n                    </div>\n                </div>\n                <br />\n                  <div className={style.ColumnDatas}>\n                  {columnData &&\n                  Object.entries(columnData).map((item) => (\n                 \n                          <div className={style.ColumnCard} key={item[0]}>\n                            <div className={style.ColumnCardHead}>\n                              <span className={style.ColumnNames}>\n                                {item[1].name}\n                              </span>\n                              <div className={style.deleteColumn}>\n                              <i\n                                className=\"fas fa-trash-alt\"\n                                onClick={(e) => handleColumnDelete(item[0], e)}\n                              ></i>\n                            </div>\n                          </div>\n                          <div\n                              className={style.cardContainer}\n                              onDrop={(e) => handleCardDrop(item[0], e)}\n                              onDragOver={(e) => {\n                                e.preventDefault();\n                              }}\n                            >\n                            <Card\n                              members={members}\n                              columnId={item[0]}\n                              boardId={props.location.state.boardId}\n                              boardTitle={name}\n                              isCardDragged={isCardDragged}\n                            ></Card>\n                          </div>\n                          </div>\n                     \n                      ))}\n                        <AddColumn\n                        pathname={props.location.pathname}\n                        boardId={props.location.state.boardId}\n                        getColumnData={getColumnData}\n                        setShowColumn={setShowColumn}\n                      ></AddColumn>\n                  </div>\n              </div>\n          )}\n        </div>\n      );\n    }\n    \n\nexport default withRouter(Board);\n","import React from 'react';\nimport {Route,Switch} from \"react-router-dom\";\nimport CreateBoard from './../src/pages/CreateBoard/CreateBoard';\nimport AllBoards from './../src/pages/AllBoards/AllBoards';\nimport Board from './../src/pages/Board/Board';\n\n\n\nfunction AppRouter(){\n\n    return (\n    <Switch>\n        <Route path=\"/createboard\" component = {CreateBoard}></Route>\n        <Route path=\"/\" exact  component = {AllBoards}></Route>\n        <Route path=\"/:boardName\" component = {Board}></Route>\n        <Route path=\"*\" render = {() => <h3>Page not Found!</h3>}></Route>\n    </Switch>\n    );\n    \n}\n\nexport default AppRouter;\n","import React, { Component } from 'react';\nimport {NavLink} from 'react-router-dom';\nimport AppRouter from '../../AppRouter';\nimport style from './Main.module.css';\n\n\n\nclass Main extends Component {\n\n    render() {\n       \n        return (\n\n            <div>\n            <div className={style.Navbar}>\n            <NavLink to='/' >\n                <span className={style.NavbarTitle}>Pro-Organizer</span>\n            </NavLink>\n                <div className={style.NavLinks}>\n                    <NavLink to='/'  activeClassName='selected'>\n                    <div className={style.NavTitle}>Home</div>\n                    </NavLink>\n                    <NavLink to='/createboard'>\n                    <div className={style.NavTitle2}>Create a board</div>\n                    </NavLink>\n                </div>\n            </div>\n                <AppRouter/>\n            </div>\n        )\n    }\n}\n\n\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport Main from './pages/Main/Main';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Main />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColumnContainer\":\"Board_ColumnContainer__2Jftm\",\"ColumnHeader\":\"Board_ColumnHeader__2HnJH\",\"ColumnTitle\":\"Board_ColumnTitle__GOrmk\",\"ColumnDatas\":\"Board_ColumnDatas__2hEGR\",\"ColumnCard\":\"Board_ColumnCard__3hiuS\",\"ColumnCardHead\":\"Board_ColumnCardHead__Rd8OC\",\"ColumnNames\":\"Board_ColumnNames__z7wIb\",\"deleteColumn\":\"Board_deleteColumn__3r4Qi\",\"DeleteBoardBtn\":\"Board_DeleteBoardBtn__2I0QT\",\"DeleteBtn\":\"Board_DeleteBtn__rAIFb\"};"],"sourceRoot":""}