{"version":3,"sources":["pages/Board/Board.module.css","pages/CreateBoard/CreateBoard.module.css","components/Header/Header.module.css","pages/AllBoards/AllBoards.module.css","components/addColumn/AddColumn.module.css","components/card/Card.module.css","common/loader/assets/loading1.gif","config/Fire.js","common/loader/Loader.js","context/Auth.js","pages/CreateBoard/CreateBoard.js","pages/AllBoards/AllBoards.js","common/Backdrop/Backdrop.js","common/Modal/Modal.js","components/addColumn/AddColumn.js","components/card/Card.js","pages/Board/Board.js","pages/LoginRegister/LoginRegister.js","common/guards/PrivateRoute.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Loader","className","src","Spinner","alt","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","auth","onAuthStateChanged","user","Provider","value","withRouter","props","useContext","formComplete","setFormComplete","formIncompleteError","setFormIncompleteError","isBoardAdded","setIsBoardAdded","nameOfboards","setNameOfboards","teamMembers","setTeamMembers","typeOfBoards","setTypeOfBoards","NameOfboard","useRef","TeamMember","TypeOfBoard","userId","uid","history","useHistory","style","CreateMain","color","CreateTitle","onSubmit","event","preventDefault","current","length","Axios","post","boardName","boardType","members","then","response","alert","push","catch","error","console","log","Createlable","id","type","name","placeholder","ref","onChange","target","CreateButton","disabled","AllBoards","boardContents","setBoardContents","showBoard","setShowBoard","document","title","getBoardContents","get","setTimeout","data","BoardContainer","BoardsTitle","BoardsData","Object","entries","map","item","to","pathname","state","boardId","BoardItem","key","BoardName","Backdrop","Modal","onClick","close","modalCloseHandler","this","content","Component","AddColumn","showModal","setShowModal","columnName","setColumnName","columnNames","modalOpenHandler","getElementById","addEventListener","modalContent","AddColumnForm","FormInput","Lable","AddButton","setShowColumn","addColumnBox","Card","month","columnId","boardTitle","isCardDragged","cardData","setCardData","showDetails","setShowDetails","cardName","setCardName","descDetails","setDescDetails","dateDetails","setDateDetails","teamDetail","setTeamDetails","editDetails","setEditDetails","cardId","setCardId","isCardAdded","setIsCardAdded","isCardDelete","setIsCardDelete","isCardEdited","setIsCardEdited","cardTitle","setCardTitle","team","setTeam","descrptn","setDescrptn","dueDate","setDueDate","memberArr","split","cardNames","teamDetails","descrpDetails","datesDetails","today","Date","day","getMonth","getDate","date","getFullYear","getCardData","AddCardForm","defaultValue","e","multiple","values","selectedOptions","opt","min","put","showmodalContent","ShowCardDetails","ShowcardHeader","editAndArcbtn","EditButton","ArchiveButton","delete","undefined","i","cardMembers","charAt","CardData","CardInfo","onCardClick","draggable","onDragStart","itemData","dragCardId","draggedCard","dataTransfer","setData","JSON","stringify","getData","drag","CardHeader","CardName","CardIcon","NotaskAdd","CardBtn","AddCardBtn","onDragOver","match","params","location","columnData","setColumnData","showColumn","setIsCardDragged","isColumnDelete","setIsColumnDelete","getColumnData","ColumnContainer","ColumnHeader","ColumnTitle","DeleteBoardBtn","DeleteBtn","window","confirm","ColumnDatas","ColumnCard","ColumnCardHead","ColumnNames","deleteColumn","cardContainer","onDrop","droppedColumnId","droppedCardData","parse","prevColId","prevCardId","draggedCardData","res","err","handleCardDrop","email","setEmail","password","setPassword","formTitle","setFormTitle","fireErrors","setFireErrors","loginBtn","setLoginBtn","getAction","action","errorNotification","role","submitBtn","signInWithEmailAndPassword","message","createUserWithEmailAndPassword","login_register","htmlFor","PrivateRoute","RouteComponent","component","rest","render","routeProps","Navbar","NavbarTitle","NavLinks","activeClassName","NavTitle","NavTitle2","NavTitle3","signOut","App","path","exact","CreateBoard","Board","LoginRegister","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bed57946.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColumnContainer\":\"Board_ColumnContainer__2Jftm\",\"ColumnHeader\":\"Board_ColumnHeader__2HnJH\",\"ColumnTitle\":\"Board_ColumnTitle__GOrmk\",\"ColumnDatas\":\"Board_ColumnDatas__2hEGR\",\"ColumnCard\":\"Board_ColumnCard__3hiuS\",\"ColumnCardHead\":\"Board_ColumnCardHead__Rd8OC\",\"ColumnNames\":\"Board_ColumnNames__z7wIb\",\"deleteColumn\":\"Board_deleteColumn__3r4Qi\",\"DeleteBoardBtn\":\"Board_DeleteBoardBtn__2I0QT\",\"DeleteBtn\":\"Board_DeleteBtn__rAIFb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateTitle\":\"CreateBoard_CreateTitle__Uo-Fz\",\"Createlable\":\"CreateBoard_Createlable__3mXoE\",\"CreateMain\":\"CreateBoard_CreateMain__Aviuc\",\"CreateButton\":\"CreateBoard_CreateButton__21EAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Header_Navbar__TF6kv\",\"NavbarTitle\":\"Header_NavbarTitle__3Ukby\",\"NavLinks\":\"Header_NavLinks__1KevD\",\"NavTitle\":\"Header_NavTitle__3g6L4\",\"NavTitle2\":\"Header_NavTitle2__28etm\",\"NavTitle3\":\"Header_NavTitle3__1gZ3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BoardContainer\":\"AllBoards_BoardContainer__2J0ah\",\"BoardsTitle\":\"AllBoards_BoardsTitle__33J8l\",\"BoardsData\":\"AllBoards_BoardsData__2Nri0\",\"BoardItem\":\"AllBoards_BoardItem__2JNBt\",\"BoardName\":\"AllBoards_BoardName__3Ejdp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addColumnBox\":\"AddColumn_addColumnBox__18cEe\",\"FormInput\":\"AddColumn_FormInput__1Q1zX\",\"Lable\":\"AddColumn_Lable__yaMz4\",\"AddColumnForm\":\"AddColumn_AddColumnForm__1uH5F\",\"AddButton\":\"AddColumn_AddButton__8E54h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardInfo\":\"Card_CardInfo__Wp0RN\",\"CardHeader\":\"Card_CardHeader__1YaGT\",\"CardIcon\":\"Card_CardIcon__3gx7F\",\"AddCardBtn\":\"Card_AddCardBtn__1W_27\",\"CardName\":\"Card_CardName__1Exi1\",\"cardMembers\":\"Card_cardMembers__2DqIP\",\"FormInput\":\"Card_FormInput__3hfF5\",\"Lable\":\"Card_Lable__1uSWL\",\"AddCardForm\":\"Card_AddCardForm__2J8xp\",\"AddButton\":\"Card_AddButton__1mCQK\",\"NotaskAdd\":\"Card_NotaskAdd__1a_wR\",\"ShowCardDetails\":\"Card_ShowCardDetails__VUC3t\",\"ShowcardHeader\":\"Card_ShowcardHeader__1lU7q\",\"EditButton\":\"Card_EditButton__2usQ0\",\"ArchiveButton\":\"Card_ArchiveButton__3ZJHy\",\"hrline\":\"Card_hrline__2F_CM\",\"editAndArcbtn\":\"Card_editAndArcbtn__yhiM8\"};","module.exports = __webpack_public_path__ + \"static/media/loading1.56db5eff.gif\";","import firebase from 'firebase';\n// require(\"firebase/database\");\n// require(\"firebase/auth\");\n\nconst config = {\n    apiKey: \"AIzaSyB0FdjRYOK7DBpciv8QrppzypdwqkBpu2s\",\n    authDomain: \"pro-organiser-app.firebaseapp.com\",\n    databaseURL: \"https://pro-organiser-app.firebaseio.com\",\n    projectId: \"pro-organiser-app\",\n    storageBucket: \"pro-organiser-app.appspot.com\",\n    messagingSenderId: \"691793629707\",\n    appId: \"1:691793629707:web:e163cfd14a6ee09c6d6d0e\"\n};\n\nconst fire = firebase.initializeApp(config);\n\n// export const auth = firebase.auth;\n// export const db = firebase.database();\n\nexport default fire;","import React from 'react';\nimport './Loader.css'\nimport Spinner from './assets/loading1.gif';\n\n\nfunction Loader() {\n    return (\n       \n       \n        <div className=\"spinner\">\n        <img src={Spinner} alt=\"loading\"/>\n        </div>\n        \n    )\n}\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport fire from '../config/Fire';\nimport  Loader  from '../common/loader/Loader';\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fire.auth().onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n  }, []);\n\n\n  if(loading){\n    return <Loader />\n  }\n\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport Axios from 'axios';\nimport style from './CreateBoard.module.css';\nimport { AuthContext } from '../../context/Auth';\nimport { withRouter, useHistory } from \"react-router-dom\";\n\nconst CreateBoard = (props) => {\n    const { currentUser } = useContext(AuthContext);\n\n    const [formComplete, setFormComplete] = useState(false);\n    const [formIncompleteError, setFormIncompleteError] = useState(false);\n    const [isBoardAdded, setIsBoardAdded] = useState(false);\n\n    const [nameOfboards, setNameOfboards] = useState(\"\");\n    const [teamMembers, setTeamMembers] = useState(\"\");\n    const [typeOfBoards, setTypeOfBoards] = useState(\"\");\n\n\n    const NameOfboard  = React.useRef();\n    const TeamMember  = React.useRef();\n    const TypeOfBoard  = React.useRef();\n\n    const userId = currentUser.uid;\n\n    // to use history function\n    const history = useHistory();\n\n    useEffect(() => {\n        setIsBoardAdded(false);\n      }, [isBoardAdded]);\n\n    \n    const addBoardToDBHandler = (event) => {\n        event.preventDefault();\n        if(NameOfboard.current.value.length === 0 || TeamMember.current.value.length === 0 || TypeOfBoard.current.value.length === 0){\n        setFormComplete(false);\n        setFormIncompleteError(true);\n        } else {\n        // add column name in firebase\n        Axios.post(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents.json`, {\n            boardName: nameOfboards,\n            boardType: typeOfBoards,\n            members: teamMembers,\n            \n            \n        })\n            .then((response) => {\n                alert(\"Board added succesfully\");\n                history.push(\"/\");\n                setIsBoardAdded(true);\n            })\n            .catch((error) => console.log(error));\n\n        }\n    };\n\n    return(\n\n        <div className={style.CreateMain}>\n        {formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding the Board</p> : null}\n        <div className={style.CreateTitle}>\n        <span>Create a Board</span>\n        </div>\n      \n        <form onSubmit={addBoardToDBHandler}>\n        <label>\n            <div className={style.Createlable}>Enter a name of your board:</div>\n            <input id=\"name\" type=\"text\" name=\"name\" placeholder=\"eg Agile Sprint Board\" ref={NameOfboard}  onChange={(event) => setNameOfboards(event.target.value)}/>\n        </label>\n        <label>\n            <div className={style.Createlable}>Add your team members:</div>\n            <input id=\"team\" type=\"text\" name=\"team\" placeholder=\"Add your team (separated by commas)\" ref={TeamMember}  onChange={(event) => setTeamMembers(event.target.value)}/>\n        </label>\n        <label>\n            <div className={style.Createlable}>Enter the type of your board:</div>\n            <input id=\"type\" type=\"text\" name=\"type\" placeholder=\"eg Design UX\" ref={TypeOfBoard}  onChange={(event) => setTypeOfBoards(event.target.value)}/>\n        </label>\n        <button type=\"submit\" id=\"CreateBoard\" className={style.CreateButton} disabled={formComplete}>create</button>\n        </form>\n    </div>\n\n    );\n\n}\n\n\n// class CreateBoard extends Component {\n//     constructor(props){\n//         super(props);\n//         this.NameOfboard = React.createRef();\n//         this.TeamMember = React.createRef();\n//         this.TypeOfBoard = React.createRef();\n\n//         this.currentUser = useContext(AuthContext);\n//         this.userId = currentUser.uid;\n//     }\n    \n//     state = {\n    \n//         formComplete : false,\n//         formIncompleteError : false,\n//         selectedBoard : {}\n//     }\n\n\n//     componentDidMount() {\n//         Axios.get(`https://pro-organiser-app.firebaseio.com/boardContents/${userId}.json`)\n//             .then(response => {\n//                 console.log(response);\n//                 this.setState({\n//                     boardContents: response.data\n//                 })\n//             })\n//             .catch(error => {console.log(error)});\n//     }\n\n//     addBoardToDBHandler = (event) => {\n//         event.preventDefault();\n//         if(this.NameOfboard.current.value.length === 0 || this.TeamMember.current.value.length === 0 || this.TypeOfBoard.current.value.length === 0){\n//             this.setState({\n//                 formComplete : false,\n//                 formIncompleteError : true\n//             })\n//         }else{\n//             let selectedBoard = {...this.state.selectedBoard}\n//             selectedBoard.boardName = this.NameOfboard.current.value;\n//             selectedBoard.members = this.TeamMember.current.value;\n//             selectedBoard.boardType = this.TypeOfBoard.current.value;\n            \n//             Axios.post('https://pro-organiser-app.firebaseio.com/boardContents.json', selectedBoard)\n//                 .then(response => {\n//                     alert(\"Board added succesfully\");\n//                                    this.props.history.push('/');\n                                \n//                         }).catch(error => {console.log(error)});\n//                     }\n//                 }\n\n//     render() {\n//     return (\n//         <div className={style.CreateMain}>\n//             {this.state.formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding the Board</p> : null}\n//             <div className={style.CreateTitle}>\n//             <span>Create a Board</span>\n//             </div>\n          \n//             <form onSubmit={this.addBoardToDBHandler}>\n//             <label>\n//                 <div className={style.Createlable}>Enter a name of your board:</div>\n//                 <input id=\"name\" type=\"text\" name=\"name\" placeholder=\"eg Agile Sprint Board\" ref={this.NameOfboard} />\n//             </label>\n//             <label>\n//                 <div className={style.Createlable}>Add your team members:</div>\n//                 <input id=\"team\" type=\"text\" name=\"team\" placeholder=\"Add your team (separated by commas)\" ref={this.TeamMember} />\n//             </label>\n//             <label>\n//                 <div className={style.Createlable}>Enter the type of your board:</div>\n//                 <input id=\"type\" type=\"text\" name=\"type\" placeholder=\"eg Design UX\" ref={this.TypeOfBoard} />\n//             </label>\n//             <button type=\"submit\" id=\"CreateBoard\" className={style.CreateButton} disabled={this.state.formComplete}>create</button>\n//             </form>\n//         </div>\n//     );\n// }\n// }\n\nexport default withRouter(CreateBoard);\n","import React, { useState, useEffect, useContext } from \"react\";\nimport style from  './AllBoards.module.css';\nimport Axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../../common/loader/Loader\";\nimport { AuthContext } from '../../context/Auth';\n\nexport const AllBoards = () => {\n\n    const { currentUser } = useContext(AuthContext);\n\n    const [boardContents, setBoardContents] = useState({});\n    const [showBoard, setShowBoard] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    const userId = currentUser.uid;\n\n    document.title = \"Pro Organizer\";\n\n    useEffect(() => {\n        getBoardContents();\n    }, [showBoard]);\n  \n    const getBoardContents = () => {\n        Axios\n        .get(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents.json`)\n        .then((response) => {\n          setTimeout(setBoardContents(response.data), 50000);\n          setLoading(false);\n          if (boardContents !== null) {\n            setShowBoard(true);\n          } else setShowBoard(false);\n        })\n        .catch((error) => console.log(error));\n    };\n\n    return (\n        <div>\n          <br />\n          {loading ? (\n            <Loader></Loader>\n          ) : (\n            <>\n              <div className={style.BoardContainer}>\n                <div className={style.BoardsTitle}>\n                    <span>Boards</span>\n                </div>\n                <br />\n                {showBoard ? (\n                  <div className={style.BoardsData}>\n                    {boardContents &&\n                      Object.entries(boardContents).map((item) => (\n                        <Link\n                          to={{\n                            pathname: \"/board/\" + item[1].boardName,\n                            state: {\n                              type: item[1].boardType,\n                              members: item[1].members,\n                              boardId: item[0],\n                            },\n                          }}\n                        >\n                          <div className={style.BoardItem} key={item[1].boardName}>\n                            <span className={style.BoardName}>\n                               {item[1].boardName}\n                            </span>\n                          </div>\n                        </Link>\n                      ))}\n                  </div>\n                ) : (\n                  <p>\n                    You haven't created any boards. Kindly click on the 'Create\n                    Board' button in the navigation bar to create a board.\n                  </p>\n                )}\n              </div>\n            </>\n          )}\n        </div>\n      );\n    }\n    \n\nexport default AllBoards;\n","import React from 'react';\n\nconst Backdrop = () => {\n    return (\n        <div style={{'width':'100%', 'height': '100%', 'backgroundColor': 'rgba(0,0,0,0.5)', 'zIndex': 100, 'position':'fixed','left': 0,'top': 0}}></div>\n    )\n}\n\nexport default Backdrop;","import React, { Component } from 'react';\nimport './Modal.css';\n\nimport Backdrop from './../Backdrop/Backdrop';\n\nclass Modal extends Component {\n    \n    render() {\n      \n        return (\n            <div>\n                <Backdrop />\n                <div className=\"modalbody\">\n                <button className=\"closebutton\" onClick = {() => this.props.close(this.props.modalCloseHandler)}>X</button>\n                    {this.props.content}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Modal;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport style from \"./AddColumn.module.css\";\nimport Modal from './../../common/Modal/Modal';\nimport Axios from \"axios\";\nimport { AuthContext } from '../../context/Auth';\n\nfunction AddColumn(props) {\n  const { currentUser } = useContext(AuthContext);\n  \n  const [showModal, setShowModal] = useState(false);\n  const [columnName, setColumnName] = useState(\"\");\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false);\n\n  const columnNames  = React.useRef();\n\n  const userId = currentUser.uid;\n\n  useEffect(() => {\n    modalOpenHandler();\n  }, [showModal]);\n\n  const handleAddColumnClick = (event) => {\n        if(columnNames.current.value.length === 0){\n          setFormComplete(false);\n          setFormIncompleteError(true);\n    } else {\n      // add column name in firebase\n      Axios.post(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${props.boardId}/column.json`, {\n        name: columnName,\n      })\n        .then((response) => {\n          alert(\"column added succesfully\");\n          props.setShowColumn(true);\n        })\n        .catch((error) => console.log(error));\n\n      setShowModal(false);\n    }\n  };\n\n  const modalOpenHandler = () => {\n    let colBox = document.getElementById(\"addColumnBox\");\n    colBox.addEventListener(\"click\", () => {\n      setShowModal(true);\n    });\n  };\n\n  const  modalCloseHandler = () => {setShowModal(false)};\n\n  let modalContent = showModal ? \n\n  (\n      <>\n      {formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding Column</p> : null}\n      <div className={style.AddColumnForm}>\n        <h2>Add column</h2>\n       <div className={style.FormInput}><span className={style.Lable}>Enter a column name:</span><input type=\"text\" id=\"column_name\" value={columnName} placeholder=\"Enter a column name\" ref={columnNames} onChange={(event) => setColumnName(event.target.value)}/></div>\n      </div>\n      <button className={style.AddButton} id=\"CreateColumn\" disabled={formComplete} onClick={handleAddColumnClick}>Add Column</button>\n      </>\n  )\n  :null;\n\n  return (\n    <div>\n       <div className={style.addColumnBox} id=\"addColumnBox\">\n        <div>Add a column</div>\n      </div>\n        <br />\n        {showModal && (\n        \n            <Modal  \n                content = {modalContent}\n                close = {modalCloseHandler}/> \n        )}\n       \n    </div>\n)\n}\n\nexport default AddColumn;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport style from \"./Card.module.css\";\nimport Modal from './../../common/Modal/Modal';\nimport Axios from \"axios\";\nimport { AuthContext } from '../../context/Auth';\n\nfunction Card(props) {\n  const { currentUser } = useContext(AuthContext);\n\n  const [showModal, setShowModal] = useState(false);\n  const { members, columnId, boardId, boardTitle, isCardDragged } = props;\n  const [cardData, setCardData] = useState(\"\");\n\n  // to handle details of card\n  const [showDetails, setShowDetails] = useState(false);\n  const [cardName, setCardName] = useState(\"\");\n  const [descDetails, setDescDetails] = useState(\"\");\n  const [dateDetails, setDateDetails] = useState(\"\");\n  const [teamDetail, setTeamDetails] = useState([]);\n  const [editDetails, setEditDetails] = useState(false);\n  const [cardId, setCardId] = useState(\"\");\n\n  const [isCardAdded, setIsCardAdded] = useState(false);\n  const [isCardDelete, setIsCardDelete] = useState(false);\n  const [isCardEdited, setIsCardEdited] = useState(false);\n\n  const [cardTitle, setCardTitle] = useState(\"\");\n  const [team, setTeam] = useState([]);\n  const [descrptn, setDescrptn] = useState(\"\");\n  const [dueDate, setDueDate] = useState(\"\");\n\n  const [formComplete, setFormComplete] = useState(false);\n  const [formIncompleteError, setFormIncompleteError] = useState(false);\n\n  // to split members list string into array\n  const memberArr = members.split(\",\");\n\n  const cardNames = React.useRef();\n  const teamDetails = React.useRef();\n  const descrpDetails = React.useRef();\n  const datesDetails = React.useRef();\n\n  const userId = currentUser.uid;\n\n    // to Hide past date\n    var today = new Date();\n    var month,\n      day = null;\n    if (today.getMonth() < 10 || today.getDate() < 10) {\n      month = \"0\" + (today.getMonth() + 1);\n      day = \"0\" + today.getDate();\n    }\n    var date = today.getFullYear() + \"-\" + month + \"-\" + day;\n\n    useEffect(() => {\n      setIsCardAdded(false);\n      setIsCardDelete(false);\n      setIsCardEdited(false);\n      getCardData();\n    }, [isCardAdded, isCardDragged, isCardDelete, isCardEdited]);\n\n\n  const getCardData = () => {\n    Axios\n    .get(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${boardId}/column/${columnId}/card.json`)\n    .then((response) => {\n        setCardData(response.data);\n    })\n    .catch((error) => console.log(error));\n};\n\n  \n  //  to Add and Edit cardData in DB\n  const handleAddCardData = (e) => {\n    //   check if all input is taken\n    if(cardNames.current.value.length === 0 || teamDetails.current.value.length === 0 || descrpDetails.current.value.length === 0 || datesDetails.current.value.length === 0){\n      setFormComplete(false);\n      setFormIncompleteError(true);\n    } else {\n      // if user wants to edit then put request is used\n      if (editDetails) {\n        Axios\n        .put(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${boardId}/column/${columnId}/card/${cardId}.json`,\n          {\n            cardTitle: cardTitle === \"\" ? cardName : cardTitle,\n            team: team.length === 0 ? teamDetail : team,\n            descrptn: descrptn === \"\" ? descDetails : descrptn,\n            dueDate: dueDate === \"\" ? dateDetails : dueDate,\n          }\n        )\n          .then((response) => {\n            alert(\"card edited succesfully\");\n            setIsCardEdited(true);\n          })\n          .catch((error) => console.log(\"Error in editDetails\" + error));\n      }\n      //  if user wants to add a new card\n      else {\n        Axios\n        .post(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${boardId}/column/${columnId}/card.json`,\n          {\n            cardTitle: cardTitle,\n            team: team,\n            descrptn: descrptn,\n            dueDate: dueDate,\n          }\n        )\n          .then((response) => {\n            alert(\"card added succesfully\");\n            setIsCardAdded(true);\n          })\n          .catch((error) => console.log(\"Error\" + error));\n      }\n\n      setShowModal(false);\n      setEditDetails(false);\n\n      setCardTitle(\"\");\n      setTeam([]);\n      setDescrptn(\"\");\n      setDueDate(\"\");\n    }\n  };\n\n  // on click of card this function shows details\n  const onCardClick = (\n    cardName,\n    descDetails,\n    dateDetails,\n    teamDetails,\n    cardId,\n    e\n  ) => {\n    setShowDetails(true);\n\n    setCardName(cardName);\n    setDescDetails(descDetails);\n    setDateDetails(dateDetails);\n    setTeamDetails(teamDetails);\n    setCardId(cardId);\n  };\n\n   // handles edit button click\n   const handleEdit = (e) => {\n    setShowDetails(false);\n    setShowModal(true);\n    setEditDetails(true);\n  };\n\n  // handles archive on card archive click\n  const handleArchive = (e) => {\n    Axios\n    .delete(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${boardId}/column/${columnId}/card/${cardId}.json`)\n      .then((response) => {\n        alert(\"card archived succesfully\");\n        setIsCardDelete(true);\n      })\n      .catch((error) => console.log(\"Error\" + error));\n\n    setShowDetails(false);\n  };\n\n//To display multiple team member selected\n  const onSelectChange = (e) => {\n    const values = [...e.target.selectedOptions].map((opt) => opt.value);\n    setTeam(values);\n  };\n\n  //to drag card\n  const drag = (itemData, dragCardId, e) => {\n    var draggedCard = {\n      columnId: columnId,\n      dragCardId: dragCardId,\n      cardData: itemData,\n    };\n\n    e.dataTransfer.setData(\"text/plain\", JSON.stringify(draggedCard));\n    console.log(e.dataTransfer.getData(\"text/plain\"));\n  };\n\n  //to drop card\n  const allowDrop = (e) => {\n    e.preventDefault();\n  };\n\n  const  modalCloseHandler = () => { setShowModal(false);setEditDetails(false);};\n\n  const  showmodalCloseHandler = () => {setShowDetails(false)};\n\n  //modal of Add and Edit Card\n  let modalContent = showModal ? \n\n  (\n      <>\n      {formIncompleteError ? <p style={{color : 'red'}}>Kindly complete the form before adding Card</p> : null}\n      <div className={style.AddCardForm}>\n        <h2>{editDetails ? 'Edit Card' : 'Add Card'}</h2>\n       <div className={style.FormInput}><span className={style.Lable}>Enter a title for your task:</span><br></br><input type=\"text\" id=\"title\" defaultValue={editDetails ? cardName : \"\"} placeholder=\"e.g. Add a new icon\" ref={cardNames} onChange={(e) => setCardTitle(e.target.value)}/></div>\n       <div className={style.FormInput}><span className={style.Lable}>Choose members for this task(select multiple,if needed):</span><select  id=\"membersList\" name=\"membersList\" defaultValue={editDetails ? teamDetail : \"\"} multiple ref={teamDetails} onChange={onSelectChange}>{memberArr.map((item) => (<option value={item} key={item}>{item}</option>))}</select></div>\n       <div className={style.FormInput}><span className={style.Lable}>Add the description for your task:</span><input id=\"description\" type=\"text\"  defaultValue={editDetails ? descDetails : \"\"} placeholder=\"Add your description here\" ref={descrpDetails}  onChange={(e) => setDescrptn(e.target.value)}/></div>\n       <div className={style.FormInput}><span className={style.Lable}>Select the due-date for this task:</span><input id=\"due_date\" type=\"date\" min={date} defaultValue={editDetails ? dateDetails : \"\"} ref={datesDetails} onChange={(e) => setDueDate(e.target.value)}/></div>\n      </div>\n      <button className={style.AddButton} id=\"CreateCard\" disabled={formComplete} onClick={handleAddCardData}>{editDetails ? 'Edit Card' : 'Add Card'}</button>\n      </>\n  )\n  :null;\n\n  //modal of show card details\n  let showmodalContent = showDetails ? \n\n  (\n      <>\n      <div className={style.ShowCardDetails}>\n        <div className={style.ShowcardHeader}>\n          <h2>{cardName}</h2>\n          <div className={style.editAndArcbtn}>\n            <button type=\"button\" id=\"editBtn\" className={style.EditButton} onClick={handleEdit}>Edit</button>\n            <button type=\"button\" id=\"archiveBtn\" className={style.ArchiveButton} onClick={handleArchive}>Archive</button>\n          </div>\n        </div>\n        <small>in {boardTitle}</small>\n        <div className=\"HorizontalLine\">\n            <hr className=\"hrline\"></hr>\n        </div>\n        <h3>Description</h3><div>{descDetails}</div>\n        <br/>\n        <h3>Members</h3>\n        <div>\n          {teamDetail !== undefined &&\n            teamDetail.map((i) => (\n              <span className={style.cardMembers} key={i}>{i.charAt(0)}</span>\n            ))}\n        </div>\n        <br/>\n        <h3>Due Date</h3><div>{dateDetails}</div>\n      </div>\n      </>\n  )\n  :null;\n\n  return (\n    <div>\n      <div className={style.CardData}>\n      {cardData ?\n        Object.entries(cardData).map((item) => (\n          <div  key={item[0]}>\n          <div className={style.CardInfo}      \n                id={item[0]}\n                value={item[1].cardTitle}\n                onClick={(e) =>\n                  onCardClick(\n                    item[1].cardTitle,\n                    item[1].descrptn,\n                    item[1].dueDate,\n                    item[1].team,\n                    item[0],\n                    e\n                  )\n                }\n                draggable=\"true\"\n                onDragStart={(e) => drag(item[1], item[0], e)}\n                >\n          <div className={style.CardHeader}>\n          <div className={style.CardName}>{item[1].cardTitle}</div>\n          </div>\n          <div className={style.CardIcon}>\n          <div><i className=\"fas fa-list\"></i></div>\n          <div>\n                    {item[1].team !== undefined ? (\n                      item[1].team.map((i) => (\n                        <span className={style.cardMembers} key={i}>\n                          {i.charAt(0)}\n                        </span>\n                      ))\n                    ) : (\n                      <div></div>\n                    )}\n                  </div>\n          </div>\n          </div>\n          </div>\n         ) ): <div className={style.NotaskAdd}>No tasks added</div>}\n          <div className={style.CardBtn}>\n            <button className={style.AddCardBtn} onClick={() => setShowModal(true)} onDragOver={allowDrop} >Add a card</button>\n          </div>\n      </div>\n        <br />\n        {showModal && (\n        \n            <Modal  \n                content = {modalContent}\n                close = {modalCloseHandler}/> \n        )}\n       \n       {showDetails && (\n        \n        <Modal  \n            content = {showmodalContent}\n            close = {showmodalCloseHandler}/> \n    )}\n\n    </div>\n)\n}\n\nexport default Card;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport style from  './Board.module.css';\nimport Axios from 'axios';\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport Loader from \"../../common/loader/Loader\";\nimport AddColumn from \"../../components/addColumn/AddColumn\";\nimport Card from \"../../components/card/Card\";\nimport { AuthContext } from '../../context/Auth';\n\nexport const Board = (props) => {\n    const { currentUser } = useContext(AuthContext);\n\n    const name = props.match.params.boardName;\n    const members = props.location.state.members;\n\n    const [columnData, setColumnData] = useState({});\n    const [showColumn, setShowColumn] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [isCardDragged, setIsCardDragged] = useState(false);\n    const [isColumnDelete, setIsColumnDelete] = useState(false);\n\n    const userId = currentUser.uid;\n\n     // to use history function\n    const history = useHistory();\n\n    document.title = `${name} | Pro Organizer`;\n\n    useEffect(() => {\n        setShowColumn(false);\n        setIsCardDragged(false);\n        setIsColumnDelete(false);\n        getColumnData();\n    }, [showColumn, isColumnDelete, isCardDragged]);\n  \n    const getColumnData = () => {\n        Axios\n        .get(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${props.location.state.boardId}/column.json`)\n        .then((response) => {\n            setTimeout(setColumnData(response.data), 5000);\n          setLoading(false);\n        })\n        .catch((error) => console.log(error));\n    };\n\n      // handle board delete\n    const handleBoardDelete = (e) => {\n      if (window.confirm(\"Are you sure you want to delete the board?\")) {\n        Axios\n        .delete(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${props.location.state.boardId}.json`)\n          .then((response) => {\n            alert(\"board deleted succesfully\");\n            history.push(\"/\");\n          })\n          .catch((error) => console.log(\"Error\" + error));\n      }\n    };\n\n      // handle column delete\n    const handleColumnDelete = (columnId, e) => {\n      if (window.confirm(\"Are you sure you want to delete the Column?\")) {\n      Axios\n      .delete(`https://pro-organiser-app.firebaseio.com/${userId}//boardContents/${props.location.state.boardId}/column/${columnId}.json`)\n        .then((response) => {\n          alert(\"column deleted succesfully\");\n          setIsColumnDelete(true);\n        })\n        .catch((error) => console.log(\"Error\" + error));\n      }\n    };\n\n      //  handle card drop\n  const handleCardDrop = (droppedColumnId, e) => {\n    e.preventDefault();\n    var droppedCardData = JSON.parse(e.dataTransfer.getData(\"text/plain\"));\n    console.log(droppedCardData);\n\n    const prevColId = droppedCardData.columnId;\n    const prevCardId = droppedCardData.dragCardId;\n    const draggedCardData = droppedCardData.cardData;\n\n    if (draggedCardData !== null) {\n      //   // Delete from previous column\n      Axios\n      .delete(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${props.location.state.boardId}/column/${prevColId}/card/${prevCardId}.json`)\n        .then((response) => {\n          console.log(\"card removed\");\n        })\n        .catch((error) => console.log(\"Error\" + error));\n\n      // Add card to new column\n      Axios\n      .post(`https://pro-organiser-app.firebaseio.com/${userId}/boardContents/${props.location.state.boardId}/column/${droppedColumnId}/card.json`,\n        {\n          cardTitle: draggedCardData.cardTitle,\n          team: draggedCardData.team,\n          descrptn: draggedCardData.descrptn,\n          dueDate: draggedCardData.dueDate,\n        }\n      )\n        .then((res) => {\n          console.log(\"card added in new column\");\n          // call new card\n        })\n        .catch((err) => console.log(\"Error\" + err));\n      setIsCardDragged(true);\n    }\n  };\n\n    return (\n        <div>\n          <br />\n          {loading ? (\n            <Loader></Loader>\n          ) : (\n              <div className={style.ColumnContainer}>\n                  <div className={style.ColumnHeader}>\n                    <div className={style.ColumnTitle}>\n                        <span>{name}</span>\n                    </div>\n                    <div className={style.DeleteBoardBtn}>\n                        <button className={style.DeleteBtn} onClick={handleBoardDelete}>Delete Board</button>\n                    </div>\n                </div>\n                <br />\n                  <div className={style.ColumnDatas}>\n                  {columnData &&\n                  Object.entries(columnData).map((item) => (\n                 \n                          <div className={style.ColumnCard} key={item[0]}>\n                            <div className={style.ColumnCardHead}>\n                              <span className={style.ColumnNames}>\n                                {item[1].name}\n                              </span>\n                              <div className={style.deleteColumn}>\n                              <i\n                                className=\"fas fa-trash-alt\"\n                                onClick={(e) => handleColumnDelete(item[0], e)}\n                              ></i>\n                            </div>\n                          </div>\n                          <div\n                              className={style.cardContainer}\n                              onDrop={(e) => handleCardDrop(item[0], e)}\n                              onDragOver={(e) => {\n                                e.preventDefault();\n                              }}\n                            >\n                            <Card\n                              members={members}\n                              columnId={item[0]}\n                              boardId={props.location.state.boardId}\n                              boardTitle={name}\n                              isCardDragged={isCardDragged}\n                            ></Card>\n                          </div>\n                          </div>\n                     \n                      ))}\n                        <AddColumn\n                        pathname={props.location.pathname}\n                        boardId={props.location.state.boardId}\n                        getColumnData={getColumnData}\n                        setShowColumn={setShowColumn}\n                      ></AddColumn>\n                  </div>\n              </div>\n          )}\n        </div>\n      );\n    }\n    \n\nexport default withRouter(Board);\n","import React, { useState, useContext } from 'react';\nimport fire from '../../config/Fire';\nimport { AuthContext } from '../../context/Auth';\nimport { withRouter, Redirect, Link } from 'react-router-dom';\nimport './LoginRegister.css';\n\n\nfunction LoginRegister(props) {\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [formTitle, setFormTitle] = useState('Login');\n  const [fireErrors, setFireErrors] = useState(\"\");\n  const [loginBtn, setLoginBtn] = useState(true);\n\n\n  const login = (event) => {\n    event.preventDefault();\n    fire.auth().signInWithEmailAndPassword(email, password)\n     .catch((error) => {\n        setFireErrors(error.message)\n     })\n  }\n\n  const register = (event) => {\n    event.preventDefault();\n    fire.auth().createUserWithEmailAndPassword(email, password)\n     .catch((error) => {\n        setFireErrors(error.message)\n     })\n  }\n\n  const getAction = action => {\n      if(action === 'reg'){\n            setFormTitle('Register New User');\n            setLoginBtn(false);\n            setFireErrors('');\n      }else{\n            setFormTitle('Login');\n            setLoginBtn(true);\n            setFireErrors('');\n      }\n  }\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n\n  \n  \n\n  let errorNotification = fireErrors ? \n  (<div className=\"alert alert-danger\" role=\"alert\">{fireErrors}</div>) : null;\n\n  let submitBtn = loginBtn ?\n  (<button  type=\"submit\" className=\"loginBtn btn btn-success\" onClick={login} >Enter</button>) :\n  (<button  type=\"submit\" className=\"loginBtn btn btn-success\" onClick={register} >Register</button>);\n\n  let login_register = loginBtn ? \n  (<button  className=\"loginBtn btn btn-primary float-right\" onClick={() => getAction('reg')}>Register</button>) :\n  (<button  className=\"loginBtn btn btn-primary float-right\" onClick={() => getAction('login')}>Login</button>);\n\n  return(\n    <div className=\"authentication\">\n    <main>\n    <div className=\"formContainer\">\n            <h1 className=\"main-title\">Pro Organizer</h1>\n                <div className=\"signup-box\">\n                <h2 className=\"formHeader\">{formTitle}</h2>\n                <div>{errorNotification}</div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email address</label>\n                        <input type=\"text\" className=\"form-control\" id=\"email\" name=\"email\" value={email} placeholder=\"Enter a email\" onChange={(event) => setEmail(event.target.value)}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" value={password} placeholder=\"Enter a password\" onChange={(event) => setPassword(event.target.value)}/>\n                    </div>\n                    {submitBtn}\n                    {login_register}\n                </div>\n            </div>\n            </main>\n        </div>\n  );\n\n}\n\nexport default withRouter(LoginRegister);\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../../context/Auth';\n\nconst PrivateRoute = ({ component: RouteComponent, children, ...rest }) => {\n  const { currentUser } = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={'/LoginRegister'} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, {useContext} from 'react';\nimport {NavLink , withRouter } from \"react-router-dom\";\nimport fire from '../../config/Fire';\nimport { AuthContext } from '../../context/Auth';\nimport style from './Header.module.css';\n\nconst Header = () => {\n\n    const { currentUser } = useContext(AuthContext);\n       \n        return (\n\n            <>\n            {currentUser ? (\n            <div className={style.Navbar}>\n            <NavLink to='/' >\n                <span className={style.NavbarTitle}>Pro-Organizer</span>\n            </NavLink>\n                <div className={style.NavLinks}>\n                    <NavLink to='/'  activeClassName='selected'>\n                    <div className={style.NavTitle}>Home</div>\n                    </NavLink>\n                    <NavLink to='/createboard'>\n                    <div className={style.NavTitle2}>Create a board</div>\n                    </NavLink>\n                    <div className={style.NavTitle3} onClick={()=>fire.auth().signOut()}>Logout</div>\n                </div>\n            </div>\n            ) : (\n            <div></div>\n                 \n            )}\n            </>\n              \n        )\n    \n}\n\n\n\nexport default withRouter(Header);\n","// import React from 'react';\n// import {BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import CreateBoard from './pages/CreateBoard/CreateBoard';\n// import AllBoards from './pages/AllBoards/AllBoards';\n// import Board from './pages/Board/Board';\n// import LoginRegister from \"./pages/LoginRegister/LoginRegister\";\n// import { AuthProvider } from './context/Auth';\n// import PrivateRoute from './common/guards/PrivateRoute';\n// import Header  from './components/Header/Header';\n\n// function App(){\n\n//     return (\n//       <AuthProvider>\n//       <Router>\n//       <Header />\n//         <Switch>\n//         <PrivateRoute path=\"/\" exact  component = {AllBoards} />\n//         <PrivateRoute path=\"/createboard\" component = {CreateBoard} />\n//         <PrivateRoute path=\"/:boardName\" component = {Board} />\n//         <Route path=\"/LoginRegister\" component={LoginRegister} />\n//         <Route path=\"*\" render = {() => <h3>Page not Found!</h3>} />\n//         </Switch>\n//       </Router>\n//     </AuthProvider>\n//     );\n    \n// }\n\n// export default App;\n\n\n\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport CreateBoard from './pages/CreateBoard/CreateBoard';\nimport AllBoards from './pages/AllBoards/AllBoards';\nimport Board from './pages/Board/Board';\nimport LoginRegister from \"./pages/LoginRegister/LoginRegister\";\nimport { AuthProvider } from './context/Auth';\nimport PrivateRoute from './common/guards/PrivateRoute';\nimport Header  from './components/Header/Header';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n      <Header />\n        <Switch>\n        <PrivateRoute path=\"/\" exact  component = {AllBoards} />\n        <PrivateRoute path=\"/createboard\" component = {CreateBoard} />\n        <PrivateRoute path=\"/board/:boardName\" component = {Board} />\n          <Route path=\"/LoginRegister\" component={LoginRegister} />\n          <Route path=\"*\" render = {() => <h3>Page not Found!</h3>} />\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}